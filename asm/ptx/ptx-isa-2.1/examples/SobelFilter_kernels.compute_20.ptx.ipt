prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaretf__Z12ComputeSobelhhhhhhhhhf
      )
      func_name
       _Z12ComputeSobelhhhhhhhhhf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf6__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf7__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf8__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf9__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparmf10__Z12ComputeSobelhhhhhhhhhf
      )
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "SobelFilter_kernels.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\sobelfilter\SobelFilter_kernels.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:/ProgramData/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/src/SobelFilter/SobelFilter_kernels.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  semicolon_terminated_statement
   linking_directive
    extern_
     .extern
     identifier_decl
      identifier_decl_aux
       state_space_specifier
        state_space_specifier_aux
         shared
          .shared
       align
        .align
        byte_count
         base_10_integer
          1
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator
        id_or_opcode
         LocalBlock
        array_spec
         array_spec_aux
          [
          ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      type
       opaque_type
        opaque_type_aux
         .texref
      variable_declarator
       id_or_opcode
        opcode
         tex
   ;
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaretf__Z12ComputeSobelhhhhhhhhhf
      )
      func_name
       _Z12ComputeSobelhhhhhhhhhf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf6__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf7__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf8__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf9__Z12ComputeSobelhhhhhhhhhf
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparmf10__Z12ComputeSobelhhhhhhhhhf
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                43
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                6
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              50
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z12ComputeSobelhhhhhhhhhf
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf3__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf4__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf6__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf7__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf8__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r15
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf9__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf10__Z12ComputeSobelhhhhhhhhhf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r19
              ,
              opr_register_or_constant
               id_or_opcode
                %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant
              id_or_opcode
               %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r28
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r29
              ,
              opr_register_or_constant
               id_or_opcode
                %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               id_or_opcode
                %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant
              id_or_opcode
               %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f4
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                id_or_opcode
                 %r36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_2050
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              54
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LBB6__Z12ComputeSobelhhhhhhhhhf
         ;
       statement
        label_decl
         $Lt_0_2050
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_1794
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LBB6__Z12ComputeSobelhhhhhhhhhf
         ;
       statement
        label_decl
         $Lt_0_1794
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              55
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r37
         ;
       statement
        label_decl
         $LBB6__Z12ComputeSobelhhhhhhhhhf
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z12ComputeSobelhhhhhhhhhf
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z12ComputeSobelhhhhhhhhhf
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z11SobelSharedP6uchar4tssssf
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z11SobelSharedP6uchar4tssssf_pSobelOriginal
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u16
        __cudaparm__Z11SobelSharedP6uchar4tssssf_SobelPitch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s16
        __cudaparm__Z11SobelSharedP6uchar4tssssf_BlockWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s16
        __cudaparm__Z11SobelSharedP6uchar4tssssf_SharedPitch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s16
        __cudaparm__Z11SobelSharedP6uchar4tssssf_w
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s16
        __cudaparm__Z11SobelSharedP6uchar4tssssf_h
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z11SobelSharedP6uchar4tssssf_fScale
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                225
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                45
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                18
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              63
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z11SobelSharedP6uchar4tssssf
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              71
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_BlockWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_13314
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_SharedPitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                id_or_opcode
                 LocalBlock
         ;
       statement
        label_decl
         $Lt_1_13826
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r25
               ,
               id_or_opcode
                %r26
               ,
               id_or_opcode
                %r27
               ,
               id_or_opcode
                %r28
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f2
               ,
               id_or_opcode
                %f3
               ,
               id_or_opcode
                %f4
               ,
               id_or_opcode
                %f5
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              72
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r30
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r32
               ,
               id_or_opcode
                %r33
               ,
               id_or_opcode
                %r34
               ,
               id_or_opcode
                %r35
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f6
               ,
               id_or_opcode
                %f7
               ,
               id_or_opcode
                %f8
               ,
               id_or_opcode
                %f9
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              74
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r38
               ,
               id_or_opcode
                %r39
               ,
               id_or_opcode
                %r40
               ,
               id_or_opcode
                %r41
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f10
               ,
               id_or_opcode
                %f11
               ,
               id_or_opcode
                %f12
               ,
               id_or_opcode
                %f13
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              76
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r44
               ,
               id_or_opcode
                %r45
               ,
               id_or_opcode
                %r46
               ,
               id_or_opcode
                %r47
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f14
               ,
               id_or_opcode
                %f15
               ,
               id_or_opcode
                %f16
               ,
               id_or_opcode
                %f17
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              78
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              71
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               id_or_opcode
                %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_13826
         ;
       statement
        label_decl
         $Lt_1_13314
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                id_or_opcode
                 LocalBlock
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_14338
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              86
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_14850
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r52
              ,
              opr_register_or_constant
               id_or_opcode
                %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r51
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r55
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_SharedPitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        label_decl
         $Lt_1_15362
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                id_or_opcode
                 %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f20
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r60
               ,
               id_or_opcode
                %r61
               ,
               id_or_opcode
                %r62
               ,
               id_or_opcode
                %r63
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f19
               ,
               id_or_opcode
                %f20
               ,
               id_or_opcode
                %f21
               ,
               id_or_opcode
                %f22
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              87
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r65
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r66
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f23
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r67
               ,
               id_or_opcode
                %r68
               ,
               id_or_opcode
                %r69
               ,
               id_or_opcode
                %r70
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f23
               ,
               id_or_opcode
                %f24
               ,
               id_or_opcode
                %f25
               ,
               id_or_opcode
                %f26
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              89
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r66
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r73
               ,
               id_or_opcode
                %r74
               ,
               id_or_opcode
                %r75
               ,
               id_or_opcode
                %r76
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f27
               ,
               id_or_opcode
                %f28
               ,
               id_or_opcode
                %f29
               ,
               id_or_opcode
                %f30
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                id_or_opcode
                 %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r66
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r79
               ,
               id_or_opcode
                %r80
               ,
               id_or_opcode
                %r81
               ,
               id_or_opcode
                %r82
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f31
               ,
               id_or_opcode
                %f32
               ,
               id_or_opcode
                %f33
               ,
               id_or_opcode
                %f34
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              93
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r66
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              86
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               id_or_opcode
                %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_15362
         ;
       statement
        label_decl
         $Lt_1_14850
         :
       statement
        label_decl
         $Lt_1_14338
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              98
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              104
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_15874
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r85
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r86
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               id_or_opcode
                %r86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r87
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_SobelPitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r89
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_pSobelOriginal
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r88
              ,
              opr_register_or_constant
               id_or_opcode
                %r89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r91
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r92
              ,
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                id_or_opcode
                 %r92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r94
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_SharedPitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r94
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r95
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_w
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                id_or_opcode
                 %r97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r98
              ,
              opr_register_or_constant
               id_or_opcode
                %r95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r99
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r101
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r102
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_h
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f35
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11SobelSharedP6uchar4tssssf_fScale
             ]
         ;
       statement
        label_decl
         $Lt_1_16386
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              106
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r104
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r105
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              107
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r106
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r107
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              109
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r104
              ,
              opr_register_or_constant
               id_or_opcode
                %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r108
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r110
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r111
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              111
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r112
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              112
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r113
              ,
              opr_register_or_constant
               id_or_opcode
                %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r114
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r115
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r116
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r118
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              113
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r119
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              114
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r120
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r112
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r106
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r105
              ,
              opr_register_or_constant
               id_or_opcode
                %r122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               id_or_opcode
                %r123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r124
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r126
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r119
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r125
              ,
              opr_register_or_constant
               id_or_opcode
                %r126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r127
              ,
              opr_register_or_constant
               id_or_opcode
                %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r129
              ,
              opr
               opr_aux
                id_or_opcode
                 %r128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r130
             ,
             opr_register_or_constant
              id_or_opcode
               %r129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r121
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r132
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r120
              ,
              opr_register_or_constant
               id_or_opcode
                %r131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r132
              ,
              opr_register_or_constant
               id_or_opcode
                %r105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r133
              ,
              opr_register_or_constant
               id_or_opcode
                %r134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r135
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                id_or_opcode
                 %r136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r138
             ,
             opr_register_or_constant
              id_or_opcode
               %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r130
              ,
              opr_register_or_constant
               id_or_opcode
                %r138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r140
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r142
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_16898
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_7
         ;
       statement
        label_decl
         $Lt_1_16898
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_16642
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_7
         ;
       statement
        label_decl
         $Lt_1_16642
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
         ;
       statement
        label_decl
         $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_7
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              122
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r145
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              123
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r146
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              124
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r147
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r146
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r149
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r106
              ,
              opr_register_or_constant
               id_or_opcode
                %r149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r151
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r150
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r152
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               id_or_opcode
                %r119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r120
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r152
              ,
              opr_register_or_constant
               id_or_opcode
                %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r154
              ,
              opr_register_or_constant
               id_or_opcode
                %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                id_or_opcode
                 %r155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r157
             ,
             opr_register_or_constant
              id_or_opcode
               %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r148
              ,
              opr_register_or_constant
               id_or_opcode
                %r145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r159
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r147
              ,
              opr_register_or_constant
               id_or_opcode
                %r158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r159
              ,
              opr_register_or_constant
               id_or_opcode
                %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r111
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r160
              ,
              opr_register_or_constant
               id_or_opcode
                %r161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r162
              ,
              opr_register_or_constant
               id_or_opcode
                %r119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r164
              ,
              opr
               opr_aux
                id_or_opcode
                 %r163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r165
             ,
             opr_register_or_constant
              id_or_opcode
               %r164
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r157
              ,
              opr_register_or_constant
               id_or_opcode
                %r165
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f38
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r167
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r168
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_17922
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r169
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_5
         ;
       statement
        label_decl
         $Lt_1_17922
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r170
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_17666
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r169
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_5
         ;
       statement
        label_decl
         $Lt_1_17666
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r169
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
         ;
       statement
        label_decl
         $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_5
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              129
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r106
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              130
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r111
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              131
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r119
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               id_or_opcode
                %r171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r106
              ,
              opr_register_or_constant
               id_or_opcode
                %r172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r174
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r173
              ,
              opr_register_or_constant
               id_or_opcode
                %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r175
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r147
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r174
              ,
              opr_register_or_constant
               id_or_opcode
                %r175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r177
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r176
              ,
              opr_register_or_constant
               id_or_opcode
                %r119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r178
              ,
              opr
               opr_aux
                id_or_opcode
                 %r177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r179
             ,
             opr_register_or_constant
              id_or_opcode
               %r178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r180
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r111
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r106
              ,
              opr_register_or_constant
               id_or_opcode
                %r180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r182
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r119
              ,
              opr_register_or_constant
               id_or_opcode
                %r181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r183
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r182
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r183
              ,
              opr_register_or_constant
               id_or_opcode
                %r121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r185
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r184
              ,
              opr_register_or_constant
               id_or_opcode
                %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r186
              ,
              opr
               opr_aux
                id_or_opcode
                 %r185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r187
             ,
             opr_register_or_constant
              id_or_opcode
               %r186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r179
              ,
              opr_register_or_constant
               id_or_opcode
                %r187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f40
              ,
              opr
               opr_aux
                id_or_opcode
                 %r188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r189
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r190
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_18946
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r191
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_3
         ;
       statement
        label_decl
         $Lt_1_18946
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r192
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r192
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_18690
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r191
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_3
         ;
       statement
        label_decl
         $Lt_1_18690
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r191
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
         ;
       statement
        label_decl
         $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_3
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              136
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r107
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              137
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r193
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r109
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              138
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r120
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r106
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r195
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r196
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               id_or_opcode
                %r195
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r197
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r196
              ,
              opr_register_or_constant
               id_or_opcode
                %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r198
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r119
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r199
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r197
              ,
              opr_register_or_constant
               id_or_opcode
                %r198
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r200
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r199
              ,
              opr_register_or_constant
               id_or_opcode
                %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r201
              ,
              opr
               opr_aux
                id_or_opcode
                 %r200
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r202
             ,
             opr_register_or_constant
              id_or_opcode
               %r201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r203
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r193
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r204
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               id_or_opcode
                %r203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r205
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r120
              ,
              opr_register_or_constant
               id_or_opcode
                %r204
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r206
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r205
              ,
              opr_register_or_constant
               id_or_opcode
                %r145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r207
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r206
              ,
              opr_register_or_constant
               id_or_opcode
                %r148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r208
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r207
              ,
              opr_register_or_constant
               id_or_opcode
                %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r209
              ,
              opr
               opr_aux
                id_or_opcode
                 %r208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r210
             ,
             opr_register_or_constant
              id_or_opcode
               %r209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r211
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r202
              ,
              opr_register_or_constant
               id_or_opcode
                %r210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f42
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r212
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r213
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r213
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_19970
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r214
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_1
         ;
       statement
        label_decl
         $Lt_1_19970
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r215
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_19714
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r214
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_1
         ;
       statement
        label_decl
         $Lt_1_19714
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r214
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
         ;
       statement
        label_decl
         $LDWendi__Z12ComputeSobelhhhhhhhhhf_178_1
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              139
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r216
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               id_or_opcode
                %r93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r217
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r216
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r218
             ,
             opr_register_or_constant
              id_or_opcode
               %r217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r219
              ,
              opr
               opr_aux
                id_or_opcode
                 %r218
              ,
              opr
               opr_aux
                id_or_opcode
                 %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r220
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r219
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_20738
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              143
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r221
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r216
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r90
              ,
              opr_register_or_constant
               id_or_opcode
                %r221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v4
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r222
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r143
               ,
               id_or_opcode
                %r169
               ,
               id_or_opcode
                %r191
               ,
               id_or_opcode
                %r214
               }
         ;
       statement
        label_decl
         $Lt_1_20738
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              104
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r223
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               id_or_opcode
                %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_16386
         ;
       statement
        label_decl
         $Lt_1_15874
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              148
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z11SobelSharedP6uchar4tssssf
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z14SobelCopyImagePhjiif
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z14SobelCopyImagePhjiif_pSobelOriginal
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z14SobelCopyImagePhjiif_Pitch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z14SobelCopyImagePhjiif_w
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z14SobelCopyImagePhjiif_h
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z14SobelCopyImagePhjiif_fscale
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                19
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                14
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z14SobelCopyImagePhjiif
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              156
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z14SobelCopyImagePhjiif_w
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_1282
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z14SobelCopyImagePhjiif_Pitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z14SobelCopyImagePhjiif_pSobelOriginal
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z14SobelCopyImagePhjiif_fscale
             ]
         ;
       statement
        label_decl
         $Lt_2_1794
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r10
               ,
               id_or_opcode
                %r11
               ,
               id_or_opcode
                %r12
               ,
               id_or_opcode
                %r13
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f3
               ,
               id_or_opcode
                %f4
               ,
               id_or_opcode
                %f5
               ,
               id_or_opcode
                %f6
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              157
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .f32
            i_min_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r2
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_1794
         ;
       statement
        label_decl
         $Lt_2_1282
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              159
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z14SobelCopyImagePhjiif
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z8SobelTexPhjiif
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z8SobelTexPhjiif_pSobelOriginal
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z8SobelTexPhjiif_Pitch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z8SobelTexPhjiif_w
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z8SobelTexPhjiif_h
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z8SobelTexPhjiif_fScale
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                88
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                51
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                6
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              163
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z8SobelTexPhjiif
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              167
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8SobelTexPhjiif_w
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_3330
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8SobelTexPhjiif_Pitch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fbf800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8SobelTexPhjiif_pSobelOriginal
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8SobelTexPhjiif_fScale
             ]
         ;
       statement
        label_decl
         $Lt_3_3842
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fbf800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r10
               ,
               id_or_opcode
                %r11
               ,
               id_or_opcode
                %r12
               ,
               id_or_opcode
                %r13
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f10
               ,
               id_or_opcode
                %f11
               ,
               id_or_opcode
                %f12
               ,
               id_or_opcode
                %f13
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              168
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r15
               ,
               id_or_opcode
                %r16
               ,
               id_or_opcode
                %r17
               ,
               id_or_opcode
                %r18
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f14
               ,
               id_or_opcode
                %f15
               ,
               id_or_opcode
                %f16
               ,
               id_or_opcode
                %f17
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              169
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f20
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f23
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r20
               ,
               id_or_opcode
                %r21
               ,
               id_or_opcode
                %r22
               ,
               id_or_opcode
                %r23
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f20
               ,
               id_or_opcode
                %f21
               ,
               id_or_opcode
                %f22
               ,
               id_or_opcode
                %f23
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              170
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r25
               ,
               id_or_opcode
                %r26
               ,
               id_or_opcode
                %r27
               ,
               id_or_opcode
                %r28
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f24
               ,
               id_or_opcode
                %f25
               ,
               id_or_opcode
                %f26
               ,
               id_or_opcode
                %f27
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r30
               ,
               id_or_opcode
                %r31
               ,
               id_or_opcode
                %r32
               ,
               id_or_opcode
                %r33
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f28
               ,
               id_or_opcode
                %f29
               ,
               id_or_opcode
                %f30
               ,
               id_or_opcode
                %f31
               }
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r34
               ,
               id_or_opcode
                %r35
               ,
               id_or_opcode
                %r36
               ,
               id_or_opcode
                %r37
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f32
               ,
               id_or_opcode
                %f33
               ,
               id_or_opcode
                %f34
               ,
               id_or_opcode
                %f35
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              173
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r39
               ,
               id_or_opcode
                %r40
               ,
               id_or_opcode
                %r41
               ,
               id_or_opcode
                %r42
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f36
               ,
               id_or_opcode
                %f37
               ,
               id_or_opcode
                %f38
               ,
               id_or_opcode
                %f39
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              174
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f40
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r44
               ,
               id_or_opcode
                %r45
               ,
               id_or_opcode
                %r46
               ,
               id_or_opcode
                %r47
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f40
               ,
               id_or_opcode
                %f41
               ,
               id_or_opcode
                %f42
               ,
               id_or_opcode
                %f43
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              175
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f46
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .u32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r49
               ,
               id_or_opcode
                %r50
               ,
               id_or_opcode
                %r51
               ,
               id_or_opcode
                %r52
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                opcode
                 tex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f44
               ,
               id_or_opcode
                %f45
               ,
               id_or_opcode
                %f46
               ,
               id_or_opcode
                %f47
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              176
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %r49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              53
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r54
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r58
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r54
              ,
              opr_register_or_constant
               id_or_opcode
                %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r63
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r65
              ,
              opr_register_or_constant
               id_or_opcode
                %r57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant
              id_or_opcode
               %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               id_or_opcode
                %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r72
              ,
              opr_register_or_constant
               id_or_opcode
                %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r74
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r73
              ,
              opr_register_or_constant
               id_or_opcode
                %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r76
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant
              id_or_opcode
               %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r68
              ,
              opr_register_or_constant
               id_or_opcode
                %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                id_or_opcode
                 %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f48
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s16
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r82
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_4354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_180_1
         ;
       statement
        label_decl
         $Lt_3_4354
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r82
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_4098
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z12ComputeSobelhhhhhhhhhf_180_1
         ;
       statement
        label_decl
         $Lt_3_4098
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        label_decl
         $LDWendi__Z12ComputeSobelhhhhhhhhhf_180_1
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              177
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r86
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r2
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_3842
         ;
       statement
        label_decl
         $Lt_3_3330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z8SobelTexPhjiif
         :
       }
 <EOF>
