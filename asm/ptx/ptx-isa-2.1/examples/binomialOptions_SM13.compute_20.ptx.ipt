prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "binomialOptions_SM13.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\binomialoptions\binomialOptions_kernel.cuh"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\binomialoptions\realtype.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         8
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        d_OptionData
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           40960
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      align
       .align
       byte_count
        base_10_integer
         4
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        d_CallValue
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           4096
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      align
       .align
       byte_count
        base_10_integer
         8
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        d_CallBuffer
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           16908288
         ]
   ;
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z21binomialOptionsKernelv
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                85
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                3
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f64
            variable_declarator
             id_or_opcode
              %fd
             parameterized_register_spec
              <
              integer
               base_10_integer
                67
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                17
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               8
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_285818_33_callA16953344
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 2056
               ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               8
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_285819_33_callB16955400
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 2056
               ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              1267
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z21binomialOptionsKernelv
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              88
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2048
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_17666
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 d_CallBuffer
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2304
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16512
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 d_OptionData
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r15
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        label_decl
         $Lt_0_11522
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              89
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd4
              ,
              opr_register_or_constant
               id_or_opcode
                %fd4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dc0a0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd5
              ,
              opr_register_or_constant
               id_or_opcode
                %fd6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                {
                id_or_opcode
                 %r21
                ,
                id_or_opcode
                 %r22
                }
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r23
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   1064875759
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant
              id_or_opcode
               %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1082535490
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .le
              .u32
              .u32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant
              id_or_opcode
               %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
              ,
              opr
               opr_aux
                id_or_opcode
                 %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_11778
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              706
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff71547652b82fe
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f64
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd11
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r31
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   1021
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_12546
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              711
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1016070144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_12290
         ;
       statement
        label_decl
         $Lt_0_12546
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1073741824
         ;
       statement
        label_decl
         $Lt_0_12290
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe62e42fefa39ef
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd12
              ,
              opr_register_or_constant
               id_or_opcode
                %fd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbc7abc9e3b39803f
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd15
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd14
              ,
              opr_register_or_constant
               id_or_opcode
                %fd13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21f07fccf58bad
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e5afd81da6c3baf
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd18
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              317
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e927e55f60f80e6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd18
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71dda8f02d666
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd22
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd21
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              319
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd23
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a013b894e0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd24
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd22
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              320
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd25
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f2a01a01d3af788
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd26
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd24
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd25
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              321
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f56c16c16c3a1ec
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd28
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd26
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd27
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f81111111109161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd30
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd28
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              323
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd31
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa55555555554c1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd32
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd30
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd31
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              324
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fc555555555556f
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd34
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd32
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd36
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd34
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd35
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd38
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd37
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              729
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1071644672
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd39
              ,
              opr
               opr_aux
                {
                id_or_opcode
                 %r37
                ,
                id_or_opcode
                 %r36
                }
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd40
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd38
              ,
              opr_register_or_constant
               id_or_opcode
                %fd39
              ,
              opr_register_or_constant
               id_or_opcode
                %fd39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd41
              ,
              opr
               opr_aux
                {
                id_or_opcode
                 %r38
                ,
                id_or_opcode
                 %r34
                }
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd40
              ,
              opr_register_or_constant
               id_or_opcode
                %fd41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi_rint_177_1
         ;
       statement
        label_decl
         $Lt_0_11778
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              29
            integer
             base_10_integer
              733
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd43
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd45
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd43
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd44
              ,
              opr
               opr_aux
                id_or_opcode
                 %p4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd47
             ,
             opr_register_or_constant
              id_or_opcode
               %fd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd47
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd42
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd45
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd46
              ,
              opr
               opr_aux
                id_or_opcode
                 %p5
         ;
       statement
        label_decl
         $LDWendi_rint_177_1
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              89
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd3
              ,
              opr_register_or_constant
               id_or_opcode
                %fd42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd49
              ,
              opr_register_or_constant
               id_or_opcode
                %fd2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd51
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f64
            i_max_opr
             opr_register
              id_or_opcode
               %fd52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd50
              ,
              opr_register_or_constant
               id_or_opcode
                %fd51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r19
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r2
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 256
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r19
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2048
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2048
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_11522
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_11010
         ;
       statement
        label_decl
         $Lt_0_17666
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16512
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 d_OptionData
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r41
              ,
              opr_register_or_constant
               id_or_opcode
                %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 d_CallBuffer
         ;
       statement
        label_decl
         $Lt_0_11010
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd53
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd54
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r17
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2048
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_285818_33_callA16953344
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r46
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_285819_33_callB16955400
         ;
       statement
        label_decl
         $Lt_0_13570
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_13826
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  613566757
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r48
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant
              id_or_opcode
               %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r51
              ,
              opr_register_or_constant
               id_or_opcode
                %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r51
              ,
              opr_register_or_constant
               id_or_opcode
                %r52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r54
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r54
              ,
              opr_register_or_constant
               id_or_opcode
                %r52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r50
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                id_or_opcode
                 %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r59
              ,
              opr
               opr_aux
                id_or_opcode
                 %r57
         ;
       statement
        label_decl
         $Lt_0_14338
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r60
              ,
              opr_register_or_constant
               id_or_opcode
                %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_14594
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              102
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r63
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd55
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r65
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r67
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd55
         ;
       statement
        label_decl
         $Lt_0_14594
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              105
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_15106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r71
              ,
              opr_register_or_constant
               id_or_opcode
                %r45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r71
              ,
              opr_register_or_constant
               id_or_opcode
                %r46
         ;
       statement
        label_decl
         $Lt_0_15618
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              107
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd56
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r72
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd56
              ,
              opr_register_or_constant
               id_or_opcode
                %fd53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd58
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r72
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd59
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd58
              ,
              opr_register_or_constant
               id_or_opcode
                %fd54
              ,
              opr_register_or_constant
               id_or_opcode
                %fd57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r73
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              112
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              113
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd60
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r73
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd60
              ,
              opr_register_or_constant
               id_or_opcode
                %fd53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd62
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r73
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd63
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd62
              ,
              opr_register_or_constant
               id_or_opcode
                %fd54
              ,
              opr_register_or_constant
               id_or_opcode
                %fd61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r72
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              114
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_15618
         ;
       statement
        label_decl
         $Lt_0_15106
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              118
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_16130
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              120
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd64
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r75
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r76
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r78
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd64
         ;
       statement
        label_decl
         $Lt_0_16130
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r58
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r58
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_14338
         ;
       statement
        label_decl
         $Lt_0_13826
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_13570
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_17154
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              124
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd65
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_285818_33_callA16953344
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 d_CallValue
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r81
              ,
              opr_register_or_constant
               id_or_opcode
                %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r83
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f1
         ;
       statement
        label_decl
         $Lt_0_17154
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              125
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z21binomialOptionsKernelv
         :
       }
 <EOF>
