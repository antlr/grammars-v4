prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "hw.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "c:/Personal/cuda-memory-debug/hw/hw.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         8
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          __cudart_i2opi_d
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             144
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              8
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              93
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              141
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              31
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              177
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              95
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              251
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              107
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              234
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              146
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              82
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              138
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              247
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              57
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              7
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              61
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              123
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              241
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              229
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              235
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              199
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              186
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              39
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              117
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              45
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              234
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              95
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              158
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              102
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              63
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              70
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              79
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              183
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              9
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              203
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              39
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              207
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              126
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              54
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              109
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              31
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              109
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              10
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              90
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              139
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              17
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              47
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              239
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              15
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              152
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              5
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              222
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              255
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              151
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              248
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              31
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              59
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              40
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              249
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              189
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              139
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              95
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              132
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              156
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              244
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              57
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              83
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              131
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              57
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              214
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              145
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              57
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              65
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              126
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              95
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              180
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              38
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              112
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              156
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              233
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              132
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              68
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              187
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              46
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              245
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              53
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              130
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              232
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              62
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              167
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              41
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              177
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              28
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              235
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              29
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              254
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              28
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              146
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              209
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              9
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              234
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              46
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              73
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              6
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              224
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              210
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              77
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              66
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              58
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              110
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              36
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              183
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              97
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              197
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              187
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              222
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              171
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              99
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              81
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              254
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              65
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              144
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              67
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              60
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              153
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              149
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              98
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              219
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              192
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              221
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              52
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              245
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              209
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              87
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              39
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              252
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              41
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              21
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              68
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              78
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              110
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              131
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              249
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              162
           }
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .s32
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          bbb
        equal_initializer
         =
         variable_initializer
          constant_expression
           constant_expression_aux
            conditional_expression
             conditional_or_expression
              conditional_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       unary_expression
                        unary_expression_not_plus_minus
                         primary
                          integer
                           base_10_integer
                            3
   ;
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z3funPd
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z3funPd_mem
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                511
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u64
            variable_declarator
             id_or_opcode
              %rd
             parameterized_register_spec
              <
              integer
               base_10_integer
                450
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f64
            variable_declarator
             id_or_opcode
              %fd
             parameterized_register_spec
              <
              integer
               base_10_integer
                466
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                132
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              local
               .local
            align
             .align
             byte_count
              base_10_integer
               8
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_result_328
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 40
               ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              local
               .local
            align
             .align
             byte_count
              base_10_integer
               8
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_result_7248
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 40
               ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              10
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z3funPd
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z3funPd_mem
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ldu
            ldu
            i_ldu_type
             .global
             .f64
            i_ldu_opr
             opr
              opr_aux
               id_or_opcode
                %fd1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd2
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd3
             ,
             opr_register_or_constant
              id_or_opcode
               %fd1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r3
             ,
             opr_register_or_constant
              id_or_opcode
               %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant
              id_or_opcode
               %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_117762
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 __cudart_i2opi_d
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_328
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_37
         ;
       statement
        label_decl
         $Lt_0_117762
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_118274
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd1
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd2
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd4
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_174082
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_328
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 __cudart_i2opi_d
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r15
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd5
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd6
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                id_or_opcode
                 %r22
         ;
       statement
        label_decl
         $Lt_0_119298
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd6
              ,
              opr_register_or_constant
               id_or_opcode
                %rd8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd9
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r30
             ,
             opr_register_or_constant
              id_or_opcode
               %r29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd11
              ,
              opr
               opr_aux
                id_or_opcode
                 %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd11
              ,
              opr_register_or_constant
               id_or_opcode
                %rd12
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r27
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_119298
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_118786
         ;
       statement
        label_decl
         $Lt_0_174082
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 __cudart_i2opi_d
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_328
         ;
       statement
        label_decl
         $Lt_0_118786
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r32
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r34
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r35
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_119810
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r37
              ,
              opr_register_or_constant
               id_or_opcode
                %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd14
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd15
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd14
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd16
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd17
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd18
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd17
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd18
         ;
       statement
        label_decl
         $Lt_0_119810
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd19
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd19
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd20
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd21
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd20
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd21
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_120578
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd23
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd24
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r39
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r40
             ,
             opr_register_or_constant
              id_or_opcode
               %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_120322
         ;
       statement
        label_decl
         $Lt_0_120578
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd25
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r40
             ,
             opr_register_or_constant
              id_or_opcode
               %r41
         ;
       statement
        label_decl
         $Lt_0_120322
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant
              id_or_opcode
               %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %p7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_120834
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r45
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant
              id_or_opcode
               %r45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd28
              ,
              opr
               opr_aux
                id_or_opcode
                 %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd29
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd28
              ,
              opr_register_or_constant
               id_or_opcode
                %rd29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_120834
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_174338
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_121858
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd31
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd32
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd31
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd32
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_121858
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_121346
         ;
       statement
        label_decl
         $Lt_0_174338
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_121346
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_122370
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd37
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd37
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_122370
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant
              id_or_opcode
               %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd39
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd40
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd41
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd40
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant
              id_or_opcode
               %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd42
              ,
              opr
               opr_aux
                id_or_opcode
                 %r52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd43
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd44
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd45
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd43
              ,
              opr_register_or_constant
               id_or_opcode
                %rd45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd42
              ,
              opr_register_or_constant
               id_or_opcode
                %rd46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd48
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_38
         ;
       statement
        label_decl
         $Lt_0_118274
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r54
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant
              id_or_opcode
               %fd12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd17
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd18
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd15
              ,
              opr_register_or_constant
               id_or_opcode
                %fd17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd14
              ,
              opr_register_or_constant
               id_or_opcode
                %fd18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 __cudart_i2opi_d
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_328
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_38
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd19
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd19
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_123138
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd23
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd21
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd24
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd25
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd23
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd27
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd25
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd29
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd27
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd31
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd29
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd33
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd31
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd32
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd33
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd34
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_122882
         ;
       statement
        label_decl
         $Lt_0_123138
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd39
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd37
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd41
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd39
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd43
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd41
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd45
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd43
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd46
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd47
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd45
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd47
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd48
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_122882
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd50
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd50
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p13
         ;
       statement
        label_decl
         $LDWendi___isinf_177_37
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd51
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd52
             ,
             opr_register_or_constant
              id_or_opcode
               %fd51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant
              id_or_opcode
               %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd54
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant
              id_or_opcode
               %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r63
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_123394
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd51
              ,
              opr_register_or_constant
               id_or_opcode
                %fd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_33
         ;
       statement
        label_decl
         $Lt_0_123394
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_123906
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd49
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd50
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd50
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd51
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r66
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r71
              ,
              opr_register_or_constant
               id_or_opcode
                %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r73
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r72
              ,
              opr_register_or_constant
               id_or_opcode
                %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r74
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_174594
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r74
              ,
              opr_register_or_constant
               id_or_opcode
                %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r75
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r70
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd52
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd53
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r74
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r77
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
         ;
       statement
        label_decl
         $Lt_0_124930
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd54
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant
              id_or_opcode
               %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd56
              ,
              opr_register_or_constant
               id_or_opcode
                %rd57
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r79
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_124930
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_124418
         ;
       statement
        label_decl
         $Lt_0_174594
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_124418
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r83
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r84
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r86
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r87
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r88
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r87
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_125442
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r89
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r89
              ,
              opr_register_or_constant
               id_or_opcode
                %r87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd58
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd59
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd58
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd60
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd61
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd62
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd61
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd62
         ;
       statement
        label_decl
         $Lt_0_125442
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd63
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd64
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd65
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd64
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd65
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_126210
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd67
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd67
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_125954
         ;
       statement
        label_decl
         $Lt_0_126210
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r93
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r93
         ;
       statement
        label_decl
         $Lt_0_125954
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r92
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant
              id_or_opcode
               %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd50
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r94
              ,
              opr
               opr_aux
                id_or_opcode
                 %p20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_126466
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd71
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r98
             ,
             opr_register_or_constant
              id_or_opcode
               %r97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd72
              ,
              opr
               opr_aux
                id_or_opcode
                 %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd73
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd72
              ,
              opr_register_or_constant
               id_or_opcode
                %rd73
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_126466
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_174850
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_127490
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd75
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd76
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd75
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd76
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_127490
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_126978
         ;
       statement
        label_decl
         $Lt_0_174850
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_126978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd78
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_128002
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd80
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd81
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd80
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd81
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_128002
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r100
             ,
             opr_register_or_constant
              id_or_opcode
               %r99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd83
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd84
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd84
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant
              id_or_opcode
               %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd86
              ,
              opr
               opr_aux
                id_or_opcode
                 %r102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd87
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd88
              ,
              opr
               opr_aux
                id_or_opcode
                 %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd89
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd88
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd87
              ,
              opr_register_or_constant
               id_or_opcode
                %rd89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd86
              ,
              opr_register_or_constant
               id_or_opcode
                %rd90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd92
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_34
         ;
       statement
        label_decl
         $Lt_0_123906
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd51
              ,
              opr_register_or_constant
               id_or_opcode
                %fd58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r104
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd61
             ,
             opr_register_or_constant
              id_or_opcode
               %fd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd63
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd65
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd61
              ,
              opr_register_or_constant
               id_or_opcode
                %fd64
              ,
              opr_register_or_constant
               id_or_opcode
                %fd51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd66
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd61
              ,
              opr_register_or_constant
               id_or_opcode
                %fd63
              ,
              opr_register_or_constant
               id_or_opcode
                %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd61
              ,
              opr_register_or_constant
               id_or_opcode
                %fd62
              ,
              opr_register_or_constant
               id_or_opcode
                %fd66
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_34
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd67
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd67
              ,
              opr_register_or_constant
               id_or_opcode
                %fd67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r105
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r105
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_128770
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd70
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd68
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd71
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd72
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd70
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd73
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd74
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd72
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd76
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd74
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd78
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd76
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd80
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd78
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd79
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd81
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd80
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd81
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_128514
         ;
       statement
        label_decl
         $Lt_0_128770
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd84
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd82
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd86
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd84
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd88
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd86
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd89
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd90
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd88
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd91
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd92
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd90
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd92
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd93
              ,
              opr_register_or_constant
               id_or_opcode
                %fd67
              ,
              opr_register_or_constant
               id_or_opcode
                %fd67
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_128514
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd94
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r108
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r107
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd56
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd94
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p26
         ;
       statement
        label_decl
         $LDWendi___isinf_177_33
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd95
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd96
             ,
             opr_register_or_constant
              id_or_opcode
               %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r109
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant
              id_or_opcode
               %r109
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd95
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r112
             ,
             opr_register_or_constant
              id_or_opcode
               %r111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r113
              ,
              opr
               opr_aux
                id_or_opcode
                 %r110
              ,
              opr
               opr_aux
                id_or_opcode
                 %r112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r114
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r113
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p27
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_129026
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd99
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd95
              ,
              opr_register_or_constant
               id_or_opcode
                %fd99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_29
         ;
       statement
        label_decl
         $Lt_0_129026
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd101
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p28
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_129538
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd93
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd94
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd95
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r115
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r116
              ,
              opr
               opr_aux
                id_or_opcode
                 %r115
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r116
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r118
              ,
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r119
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r121
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r121
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r123
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r122
              ,
              opr_register_or_constant
               id_or_opcode
                %r123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r124
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p29
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_175106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r124
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r126
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r125
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r120
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd96
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd97
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd96
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r124
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r127
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                id_or_opcode
                 %r126
         ;
       statement
        label_decl
         $Lt_0_130562
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd98
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r131
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd98
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r132
             ,
             opr_register_or_constant
              id_or_opcode
               %r131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd100
              ,
              opr_register_or_constant
               id_or_opcode
                %rd101
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r129
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r129
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p30
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_130562
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r124
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_130050
         ;
       statement
        label_decl
         $Lt_0_175106
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_130050
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r133
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r136
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r137
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p31
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_131074
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r139
              ,
              opr_register_or_constant
               id_or_opcode
                %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd102
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd103
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd102
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd103
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd104
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd105
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd104
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd106
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd105
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd106
         ;
       statement
        label_decl
         $Lt_0_131074
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd107
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd107
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd108
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd109
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd108
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd109
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd110
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p32
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_131842
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd111
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r141
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r142
             ,
             opr_register_or_constant
              id_or_opcode
               %r141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_131586
         ;
       statement
        label_decl
         $Lt_0_131842
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd113
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r143
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r142
             ,
             opr_register_or_constant
              id_or_opcode
               %r143
         ;
       statement
        label_decl
         $Lt_0_131586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r142
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r145
             ,
             opr_register_or_constant
              id_or_opcode
               %r144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd114
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p33
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r145
              ,
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                id_or_opcode
                 %p33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r142
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p34
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_132098
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd115
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r147
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r148
             ,
             opr_register_or_constant
              id_or_opcode
               %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd116
              ,
              opr
               opr_aux
                id_or_opcode
                 %r148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd117
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd116
              ,
              opr_register_or_constant
               id_or_opcode
                %rd117
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd94
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_132098
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd118
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p35
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p35
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_175362
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_133122
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd119
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd120
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd119
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd120
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd121
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p36
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_133122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_132610
         ;
       statement
        label_decl
         $Lt_0_175362
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_132610
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd122
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd123
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p37
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_133634
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd124
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd125
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd124
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd125
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_133634
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd126
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r149
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r150
             ,
             opr_register_or_constant
              id_or_opcode
               %r149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd127
              ,
              opr
               opr_aux
                id_or_opcode
                 %r150
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd127
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd128
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd129
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r151
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd128
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r152
             ,
             opr_register_or_constant
              id_or_opcode
               %r151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd130
              ,
              opr
               opr_aux
                id_or_opcode
                 %r152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd131
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd132
              ,
              opr
               opr_aux
                id_or_opcode
                 %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd133
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd132
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd131
              ,
              opr_register_or_constant
               id_or_opcode
                %rd133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd130
              ,
              opr_register_or_constant
               id_or_opcode
                %rd134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd136
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_30
         ;
       statement
        label_decl
         $Lt_0_129538
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd95
              ,
              opr_register_or_constant
               id_or_opcode
                %fd102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd104
              ,
              opr
               opr_aux
                id_or_opcode
                 %r154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd105
             ,
             opr_register_or_constant
              id_or_opcode
               %fd104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd106
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd108
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd109
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd105
              ,
              opr_register_or_constant
               id_or_opcode
                %fd108
              ,
              opr_register_or_constant
               id_or_opcode
                %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd110
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd105
              ,
              opr_register_or_constant
               id_or_opcode
                %fd107
              ,
              opr_register_or_constant
               id_or_opcode
                %fd109
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd105
              ,
              opr_register_or_constant
               id_or_opcode
                %fd106
              ,
              opr_register_or_constant
               id_or_opcode
                %fd110
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_30
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd111
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd111
              ,
              opr_register_or_constant
               id_or_opcode
                %fd111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r155
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p38
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r155
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p38
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_134402
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd113
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd114
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd112
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd115
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd116
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd114
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd118
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd116
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd119
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd120
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd118
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd121
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd122
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd120
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd123
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd124
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd122
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd123
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd125
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd124
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd125
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_134146
         ;
       statement
        label_decl
         $Lt_0_134402
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd126
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd127
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd128
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd126
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd129
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd130
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd128
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd131
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd132
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd130
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd133
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd134
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd132
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd135
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd136
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd134
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd136
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd137
              ,
              opr_register_or_constant
               id_or_opcode
                %fd111
              ,
              opr_register_or_constant
               id_or_opcode
                %fd111
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_134146
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd138
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p39
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r157
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd100
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd138
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p39
         ;
       statement
        label_decl
         $LDWendi___isinf_177_29
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd139
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd140
             ,
             opr_register_or_constant
              id_or_opcode
               %fd139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd141
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r159
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd140
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant
              id_or_opcode
               %r159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd142
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r161
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd139
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant
              id_or_opcode
               %r161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r163
              ,
              opr
               opr_aux
                id_or_opcode
                 %r160
              ,
              opr
               opr_aux
                id_or_opcode
                 %r162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r164
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p40
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r163
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r164
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p40
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_134658
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd139
              ,
              opr_register_or_constant
               id_or_opcode
                %fd143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_25
         ;
       statement
        label_decl
         $Lt_0_134658
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd145
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd140
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p41
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_135170
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd137
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd138
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd137
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd138
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd139
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd137
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r165
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r166
              ,
              opr
               opr_aux
                id_or_opcode
                 %r165
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r166
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r168
              ,
              opr
               opr_aux
                id_or_opcode
                 %r167
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r169
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r169
              ,
              opr_register_or_constant
               id_or_opcode
                %r168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r171
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r171
              ,
              opr_register_or_constant
               id_or_opcode
                %r168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r173
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r174
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r172
              ,
              opr_register_or_constant
               id_or_opcode
                %r173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p42
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r174
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p42
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_175618
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r175
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r174
              ,
              opr_register_or_constant
               id_or_opcode
                %r168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r175
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r170
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd140
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd137
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd141
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd140
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r177
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r174
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r178
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r177
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r180
              ,
              opr
               opr_aux
                id_or_opcode
                 %r176
         ;
       statement
        label_decl
         $Lt_0_136194
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd142
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r181
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd142
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r182
             ,
             opr_register_or_constant
              id_or_opcode
               %r181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd144
              ,
              opr
               opr_aux
                id_or_opcode
                 %r182
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd144
              ,
              opr_register_or_constant
               id_or_opcode
                %rd145
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r179
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r179
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p43
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p43
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_136194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_135682
         ;
       statement
        label_decl
         $Lt_0_175618
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_135682
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r183
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r183
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r185
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r184
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r186
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r187
              ,
              opr
               opr_aux
                id_or_opcode
                 %r167
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r188
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p44
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r187
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p44
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_136706
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r189
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r190
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r189
              ,
              opr_register_or_constant
               id_or_opcode
                %r187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd146
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd147
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd146
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd148
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd149
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd150
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd149
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd150
         ;
       statement
        label_decl
         $Lt_0_136706
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd151
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd151
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd152
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd153
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd152
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd153
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd154
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p45
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p45
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_137474
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd155
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r191
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd155
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r192
             ,
             opr_register_or_constant
              id_or_opcode
               %r191
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_137218
         ;
       statement
        label_decl
         $Lt_0_137474
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd157
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r193
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r192
             ,
             opr_register_or_constant
              id_or_opcode
               %r193
         ;
       statement
        label_decl
         $Lt_0_137218
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r192
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r195
             ,
             opr_register_or_constant
              id_or_opcode
               %r194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd138
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r195
              ,
              opr
               opr_aux
                id_or_opcode
                 %r194
              ,
              opr
               opr_aux
                id_or_opcode
                 %p46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r196
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p47
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r192
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p47
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_137730
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd159
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r197
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r198
             ,
             opr_register_or_constant
              id_or_opcode
               %r197
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd160
              ,
              opr
               opr_aux
                id_or_opcode
                 %r198
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd161
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd160
              ,
              opr_register_or_constant
               id_or_opcode
                %rd161
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_137730
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd162
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p48
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p48
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_175874
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_138754
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd163
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd164
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd163
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd164
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd165
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd165
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p49
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_138754
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_138242
         ;
       statement
        label_decl
         $Lt_0_175874
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_138242
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd166
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd167
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p50
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p50
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_139266
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd168
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd169
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd168
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd169
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_139266
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd170
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r199
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r200
             ,
             opr_register_or_constant
              id_or_opcode
               %r199
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd171
              ,
              opr
               opr_aux
                id_or_opcode
                 %r200
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd171
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd172
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd173
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r201
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd172
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r202
             ,
             opr_register_or_constant
              id_or_opcode
               %r201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd174
              ,
              opr
               opr_aux
                id_or_opcode
                 %r202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd175
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r203
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd176
              ,
              opr
               opr_aux
                id_or_opcode
                 %r203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd177
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd176
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd178
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd175
              ,
              opr_register_or_constant
               id_or_opcode
                %rd177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd174
              ,
              opr_register_or_constant
               id_or_opcode
                %rd178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd180
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_26
         ;
       statement
        label_decl
         $Lt_0_135170
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd146
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd139
              ,
              opr_register_or_constant
               id_or_opcode
                %fd146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r204
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r204
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r204
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd149
             ,
             opr_register_or_constant
              id_or_opcode
               %fd148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd150
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd151
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd152
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd153
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd149
              ,
              opr_register_or_constant
               id_or_opcode
                %fd152
              ,
              opr_register_or_constant
               id_or_opcode
                %fd139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd154
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd149
              ,
              opr_register_or_constant
               id_or_opcode
                %fd151
              ,
              opr_register_or_constant
               id_or_opcode
                %fd153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd149
              ,
              opr_register_or_constant
               id_or_opcode
                %fd150
              ,
              opr_register_or_constant
               id_or_opcode
                %fd154
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_26
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd155
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd155
              ,
              opr_register_or_constant
               id_or_opcode
                %fd155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r205
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r206
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r205
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p51
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_140034
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd157
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd158
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd156
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd159
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd160
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd158
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd161
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd162
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd160
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd163
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd164
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd162
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd165
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd166
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd164
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd165
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd167
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd168
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd166
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd167
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd169
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd168
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd169
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_139778
         ;
       statement
        label_decl
         $Lt_0_140034
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd170
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd171
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd172
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd170
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd173
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd174
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd172
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd175
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd176
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd174
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd177
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd178
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd176
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd179
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd180
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd178
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd180
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd181
              ,
              opr_register_or_constant
               id_or_opcode
                %fd155
              ,
              opr_register_or_constant
               id_or_opcode
                %fd155
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_139778
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd182
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r207
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r208
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r207
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd144
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd182
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p52
         ;
       statement
        label_decl
         $LDWendi___isinf_177_25
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd183
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd184
             ,
             opr_register_or_constant
              id_or_opcode
               %fd183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd185
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r209
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd184
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r210
             ,
             opr_register_or_constant
              id_or_opcode
               %r209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd186
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r211
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd183
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r212
             ,
             opr_register_or_constant
              id_or_opcode
               %r211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r213
              ,
              opr
               opr_aux
                id_or_opcode
                 %r210
              ,
              opr
               opr_aux
                id_or_opcode
                 %r212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r214
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p53
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r213
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r214
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p53
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_140290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd187
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd183
              ,
              opr_register_or_constant
               id_or_opcode
                %fd187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_21
         ;
       statement
        label_decl
         $Lt_0_140290
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd189
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd184
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p54
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_140802
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd181
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd182
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd181
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd182
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd183
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd181
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r215
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r216
              ,
              opr
               opr_aux
                id_or_opcode
                 %r215
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r217
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r216
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r218
              ,
              opr
               opr_aux
                id_or_opcode
                 %r217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r219
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r220
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r219
              ,
              opr_register_or_constant
               id_or_opcode
                %r218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r221
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r221
              ,
              opr_register_or_constant
               id_or_opcode
                %r218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r223
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r224
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r222
              ,
              opr_register_or_constant
               id_or_opcode
                %r223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r224
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p55
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_176130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r224
              ,
              opr_register_or_constant
               id_or_opcode
                %r218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r226
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r225
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r220
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd184
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd181
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd185
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd184
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r227
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r224
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r228
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r227
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r229
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r230
              ,
              opr
               opr_aux
                id_or_opcode
                 %r226
         ;
       statement
        label_decl
         $Lt_0_141826
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd187
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd186
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r231
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd186
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r232
             ,
             opr_register_or_constant
              id_or_opcode
               %r231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd188
              ,
              opr
               opr_aux
                id_or_opcode
                 %r232
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd189
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd188
              ,
              opr_register_or_constant
               id_or_opcode
                %rd189
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r229
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r229
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r229
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r228
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p56
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_141826
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_141314
         ;
       statement
        label_decl
         $Lt_0_176130
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_141314
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r233
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r234
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r233
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r235
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r234
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r236
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r235
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r236
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r237
              ,
              opr
               opr_aux
                id_or_opcode
                 %r217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r238
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r237
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r238
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p57
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_142338
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r239
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r240
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r239
              ,
              opr_register_or_constant
               id_or_opcode
                %r237
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd190
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r240
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd191
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r237
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd190
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd191
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd192
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd193
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd192
              ,
              opr
               opr_aux
                id_or_opcode
                 %r240
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd194
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r237
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd193
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd194
         ;
       statement
        label_decl
         $Lt_0_142338
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd195
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd195
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd196
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd197
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd196
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd197
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd198
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p58
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd198
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p58
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_143106
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd199
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd200
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r241
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd199
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd200
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r242
             ,
             opr_register_or_constant
              id_or_opcode
               %r241
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_142850
         ;
       statement
        label_decl
         $Lt_0_143106
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd201
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r243
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r242
             ,
             opr_register_or_constant
              id_or_opcode
               %r243
         ;
       statement
        label_decl
         $Lt_0_142850
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r244
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r242
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r245
             ,
             opr_register_or_constant
              id_or_opcode
               %r244
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd202
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd182
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r245
              ,
              opr
               opr_aux
                id_or_opcode
                 %r244
              ,
              opr
               opr_aux
                id_or_opcode
                 %p59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r246
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p60
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r242
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r246
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p60
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_143362
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd203
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r247
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r248
             ,
             opr_register_or_constant
              id_or_opcode
               %r247
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd204
              ,
              opr
               opr_aux
                id_or_opcode
                 %r248
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd205
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd204
              ,
              opr_register_or_constant
               id_or_opcode
                %rd205
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd182
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_143362
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd206
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p61
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_176386
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_144386
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd207
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd208
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd207
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd208
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd209
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p62
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p62
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_144386
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_143874
         ;
       statement
        label_decl
         $Lt_0_176386
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_143874
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd210
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd211
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p63
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p63
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_144898
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd212
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd213
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd212
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd213
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_144898
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd214
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r249
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd214
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r250
             ,
             opr_register_or_constant
              id_or_opcode
               %r249
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd215
              ,
              opr
               opr_aux
                id_or_opcode
                 %r250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd215
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd216
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r251
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd216
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r252
             ,
             opr_register_or_constant
              id_or_opcode
               %r251
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd218
              ,
              opr
               opr_aux
                id_or_opcode
                 %r252
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd219
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r253
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd220
              ,
              opr
               opr_aux
                id_or_opcode
                 %r253
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd221
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd220
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd219
              ,
              opr_register_or_constant
               id_or_opcode
                %rd221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd223
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd218
              ,
              opr_register_or_constant
               id_or_opcode
                %rd222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd224
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_22
         ;
       statement
        label_decl
         $Lt_0_140802
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd190
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd191
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd183
              ,
              opr_register_or_constant
               id_or_opcode
                %fd190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r254
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd191
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r254
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd192
              ,
              opr
               opr_aux
                id_or_opcode
                 %r254
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd193
             ,
             opr_register_or_constant
              id_or_opcode
               %fd192
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd194
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd195
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd196
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd197
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd193
              ,
              opr_register_or_constant
               id_or_opcode
                %fd196
              ,
              opr_register_or_constant
               id_or_opcode
                %fd183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd198
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd193
              ,
              opr_register_or_constant
               id_or_opcode
                %fd195
              ,
              opr_register_or_constant
               id_or_opcode
                %fd197
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd193
              ,
              opr_register_or_constant
               id_or_opcode
                %fd194
              ,
              opr_register_or_constant
               id_or_opcode
                %fd198
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_22
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd199
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd199
              ,
              opr_register_or_constant
               id_or_opcode
                %fd199
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r255
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r256
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p64
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r255
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r256
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p64
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_145666
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd200
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd201
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd202
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd200
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd203
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd204
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd202
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd205
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd206
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd204
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd207
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd208
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd206
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd209
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd210
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd208
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd211
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd212
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd210
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd211
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd213
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd212
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd213
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_145410
         ;
       statement
        label_decl
         $Lt_0_145666
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd214
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd215
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd216
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd214
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd218
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd216
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd219
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd220
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd218
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd221
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd222
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd220
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd223
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd224
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd222
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd224
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd225
              ,
              opr_register_or_constant
               id_or_opcode
                %fd199
              ,
              opr_register_or_constant
               id_or_opcode
                %fd199
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_145410
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd226
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r257
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r258
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p65
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r257
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd188
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd226
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p65
         ;
       statement
        label_decl
         $LDWendi___isinf_177_21
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd227
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd228
             ,
             opr_register_or_constant
              id_or_opcode
               %fd227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd229
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r259
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd228
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd229
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r260
             ,
             opr_register_or_constant
              id_or_opcode
               %r259
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd230
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r261
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd227
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd230
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r262
             ,
             opr_register_or_constant
              id_or_opcode
               %r261
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r263
              ,
              opr
               opr_aux
                id_or_opcode
                 %r260
              ,
              opr
               opr_aux
                id_or_opcode
                 %r262
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r264
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p66
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r263
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r264
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p66
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_145922
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd231
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd232
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd227
              ,
              opr_register_or_constant
               id_or_opcode
                %fd231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_17
         ;
       statement
        label_decl
         $Lt_0_145922
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd233
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p67
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd228
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd233
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p67
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_146434
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd225
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd226
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd225
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd226
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd227
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd225
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r265
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r266
              ,
              opr
               opr_aux
                id_or_opcode
                 %r265
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r267
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r266
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r268
              ,
              opr
               opr_aux
                id_or_opcode
                 %r267
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r269
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r270
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r269
              ,
              opr_register_or_constant
               id_or_opcode
                %r268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r270
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r271
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r272
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r271
              ,
              opr_register_or_constant
               id_or_opcode
                %r268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r273
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r274
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r272
              ,
              opr_register_or_constant
               id_or_opcode
                %r273
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r274
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r270
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p68
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_176642
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r275
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r274
              ,
              opr_register_or_constant
               id_or_opcode
                %r268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r276
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r275
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r270
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd228
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd225
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd229
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd228
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r277
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r274
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r278
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r277
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r279
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r280
              ,
              opr
               opr_aux
                id_or_opcode
                 %r276
         ;
       statement
        label_decl
         $Lt_0_147458
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd230
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd229
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd231
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd230
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r281
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd230
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r282
             ,
             opr_register_or_constant
              id_or_opcode
               %r281
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd232
              ,
              opr
               opr_aux
                id_or_opcode
                 %r282
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd233
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd229
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd232
              ,
              opr_register_or_constant
               id_or_opcode
                %rd233
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r279
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r279
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r279
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p69
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r278
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p69
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_147458
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r274
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_146946
         ;
       statement
        label_decl
         $Lt_0_176642
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_146946
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r283
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r284
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r283
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r285
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r284
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r286
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r285
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r286
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r287
              ,
              opr
               opr_aux
                id_or_opcode
                 %r267
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r288
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r287
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r288
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p70
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_147970
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r289
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r290
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r289
              ,
              opr_register_or_constant
               id_or_opcode
                %r287
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd234
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd235
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r287
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd234
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd235
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd236
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd237
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd236
              ,
              opr
               opr_aux
                id_or_opcode
                 %r290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd238
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r287
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd237
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd238
         ;
       statement
        label_decl
         $Lt_0_147970
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd239
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd239
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd240
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd241
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd240
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd241
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd242
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p71
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_148738
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd243
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd244
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r291
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd243
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd244
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r292
             ,
             opr_register_or_constant
              id_or_opcode
               %r291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_148482
         ;
       statement
        label_decl
         $Lt_0_148738
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd245
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r293
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd245
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r292
             ,
             opr_register_or_constant
              id_or_opcode
               %r293
         ;
       statement
        label_decl
         $Lt_0_148482
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r294
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r292
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r295
             ,
             opr_register_or_constant
              id_or_opcode
               %r294
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd246
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p72
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd226
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd246
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r295
              ,
              opr
               opr_aux
                id_or_opcode
                 %r294
              ,
              opr
               opr_aux
                id_or_opcode
                 %p72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r296
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p73
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r292
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r296
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p73
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_148994
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd247
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r297
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd247
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r298
             ,
             opr_register_or_constant
              id_or_opcode
               %r297
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd248
              ,
              opr
               opr_aux
                id_or_opcode
                 %r298
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd249
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd248
              ,
              opr_register_or_constant
               id_or_opcode
                %rd249
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd226
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_148994
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd250
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p74
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p74
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_176898
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_150018
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd251
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd252
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd251
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd252
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd253
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p75
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd253
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p75
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_150018
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_149506
         ;
       statement
        label_decl
         $Lt_0_176898
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_149506
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd254
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd254
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd255
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p76
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p76
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_150530
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd256
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd257
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd256
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd257
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_150530
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd258
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r299
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r300
             ,
             opr_register_or_constant
              id_or_opcode
               %r299
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd259
              ,
              opr
               opr_aux
                id_or_opcode
                 %r300
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd259
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd260
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd261
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r301
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd260
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd261
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r302
             ,
             opr_register_or_constant
              id_or_opcode
               %r301
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd262
              ,
              opr
               opr_aux
                id_or_opcode
                 %r302
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd263
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r303
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd264
              ,
              opr
               opr_aux
                id_or_opcode
                 %r303
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd265
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd264
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd266
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd263
              ,
              opr_register_or_constant
               id_or_opcode
                %rd265
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd267
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd262
              ,
              opr_register_or_constant
               id_or_opcode
                %rd266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd268
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd267
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_18
         ;
       statement
        label_decl
         $Lt_0_146434
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd234
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd235
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd227
              ,
              opr_register_or_constant
               id_or_opcode
                %fd234
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r304
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd235
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r304
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd236
              ,
              opr
               opr_aux
                id_or_opcode
                 %r304
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd237
             ,
             opr_register_or_constant
              id_or_opcode
               %fd236
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd238
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd239
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd240
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd241
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd237
              ,
              opr_register_or_constant
               id_or_opcode
                %fd240
              ,
              opr_register_or_constant
               id_or_opcode
                %fd227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd242
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd237
              ,
              opr_register_or_constant
               id_or_opcode
                %fd239
              ,
              opr_register_or_constant
               id_or_opcode
                %fd241
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd237
              ,
              opr_register_or_constant
               id_or_opcode
                %fd238
              ,
              opr_register_or_constant
               id_or_opcode
                %fd242
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_18
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd243
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd243
              ,
              opr_register_or_constant
               id_or_opcode
                %fd243
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r305
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r306
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p77
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r305
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r306
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p77
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_151298
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd244
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd245
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd246
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd244
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd245
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd247
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd248
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd246
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd247
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd249
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd250
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd248
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd249
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd251
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd252
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd250
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd251
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd253
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd254
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd252
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd253
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd255
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd256
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd254
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd255
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd257
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd256
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd257
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_151042
         ;
       statement
        label_decl
         $Lt_0_151298
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd258
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd259
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd260
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd258
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd259
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd261
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd262
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd260
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd261
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd263
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd264
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd262
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd263
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd265
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd266
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd264
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd265
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd267
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd268
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd266
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd267
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd269
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd268
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd269
              ,
              opr_register_or_constant
               id_or_opcode
                %fd243
              ,
              opr_register_or_constant
               id_or_opcode
                %fd243
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_151042
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd270
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r307
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r308
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p78
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r307
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r308
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd232
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd270
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p78
         ;
       statement
        label_decl
         $LDWendi___isinf_177_17
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd271
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd272
             ,
             opr_register_or_constant
              id_or_opcode
               %fd271
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd273
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r309
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd272
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd273
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r310
             ,
             opr_register_or_constant
              id_or_opcode
               %r309
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd274
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r311
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd271
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd274
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r312
             ,
             opr_register_or_constant
              id_or_opcode
               %r311
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r313
              ,
              opr
               opr_aux
                id_or_opcode
                 %r310
              ,
              opr
               opr_aux
                id_or_opcode
                 %r312
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r314
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p79
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r313
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r314
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p79
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_151554
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd275
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd276
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd271
              ,
              opr_register_or_constant
               id_or_opcode
                %fd275
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_13
         ;
       statement
        label_decl
         $Lt_0_151554
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd277
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p80
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd272
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd277
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p80
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_152066
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd269
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd271
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd270
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd269
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd270
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd271
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd269
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r315
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd271
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r316
              ,
              opr
               opr_aux
                id_or_opcode
                 %r315
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r317
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r316
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r318
              ,
              opr
               opr_aux
                id_or_opcode
                 %r317
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r319
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r320
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r319
              ,
              opr_register_or_constant
               id_or_opcode
                %r318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r320
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r321
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r322
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r321
              ,
              opr_register_or_constant
               id_or_opcode
                %r318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r323
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r324
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r322
              ,
              opr_register_or_constant
               id_or_opcode
                %r323
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r324
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r320
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p81
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_177154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r325
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r324
              ,
              opr_register_or_constant
               id_or_opcode
                %r318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r326
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r325
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r320
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd272
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd269
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd273
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd272
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r327
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r324
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r328
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r327
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r329
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r330
              ,
              opr
               opr_aux
                id_or_opcode
                 %r326
         ;
       statement
        label_decl
         $Lt_0_153090
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd274
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd273
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd275
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd274
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r331
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd274
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd275
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r332
             ,
             opr_register_or_constant
              id_or_opcode
               %r331
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd276
              ,
              opr
               opr_aux
                id_or_opcode
                 %r332
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd277
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd273
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd276
              ,
              opr_register_or_constant
               id_or_opcode
                %rd277
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r329
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd275
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r329
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r329
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p82
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r328
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p82
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_153090
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r324
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_152578
         ;
       statement
        label_decl
         $Lt_0_177154
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_152578
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r333
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r334
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r333
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r335
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r334
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r336
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r335
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r336
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r337
              ,
              opr
               opr_aux
                id_or_opcode
                 %r317
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r338
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p83
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r337
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r338
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p83
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_153602
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r339
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r340
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r339
              ,
              opr_register_or_constant
               id_or_opcode
                %r337
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd278
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd279
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r337
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd278
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd279
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd280
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd281
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd280
              ,
              opr
               opr_aux
                id_or_opcode
                 %r340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd282
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r337
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd281
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd282
         ;
       statement
        label_decl
         $Lt_0_153602
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd283
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd283
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd284
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd285
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd284
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd285
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd286
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p84
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd286
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p84
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_154370
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd287
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd288
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r341
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd287
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd288
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r342
             ,
             opr_register_or_constant
              id_or_opcode
               %r341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_154114
         ;
       statement
        label_decl
         $Lt_0_154370
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd289
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r343
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd289
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r342
             ,
             opr_register_or_constant
              id_or_opcode
               %r343
         ;
       statement
        label_decl
         $Lt_0_154114
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r344
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r342
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r345
             ,
             opr_register_or_constant
              id_or_opcode
               %r344
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd290
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p85
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd270
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r345
              ,
              opr
               opr_aux
                id_or_opcode
                 %r344
              ,
              opr
               opr_aux
                id_or_opcode
                 %p85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r346
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r342
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r346
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p86
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_154626
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd291
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r347
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r348
             ,
             opr_register_or_constant
              id_or_opcode
               %r347
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd292
              ,
              opr
               opr_aux
                id_or_opcode
                 %r348
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd293
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd292
              ,
              opr_register_or_constant
               id_or_opcode
                %rd293
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd270
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_154626
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd294
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p87
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd294
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p87
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_177410
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_155650
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd295
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd296
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd295
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd296
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd297
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p88
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd297
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p88
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_155650
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_155138
         ;
       statement
        label_decl
         $Lt_0_177410
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_155138
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd298
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd298
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd299
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p89
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd299
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p89
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_156162
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd300
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd301
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd300
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd301
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_156162
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd302
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r349
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd302
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r350
             ,
             opr_register_or_constant
              id_or_opcode
               %r349
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd303
              ,
              opr
               opr_aux
                id_or_opcode
                 %r350
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd303
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd304
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd305
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r351
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd304
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd305
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r352
             ,
             opr_register_or_constant
              id_or_opcode
               %r351
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd306
              ,
              opr
               opr_aux
                id_or_opcode
                 %r352
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd307
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r353
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd308
              ,
              opr
               opr_aux
                id_or_opcode
                 %r353
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd309
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd308
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd310
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd307
              ,
              opr_register_or_constant
               id_or_opcode
                %rd309
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd311
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd306
              ,
              opr_register_or_constant
               id_or_opcode
                %rd310
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd312
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd311
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd312
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_14
         ;
       statement
        label_decl
         $Lt_0_152066
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd278
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd279
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd271
              ,
              opr_register_or_constant
               id_or_opcode
                %fd278
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r354
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd279
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd280
              ,
              opr
               opr_aux
                id_or_opcode
                 %r354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd281
             ,
             opr_register_or_constant
              id_or_opcode
               %fd280
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd282
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd283
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd284
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd285
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd281
              ,
              opr_register_or_constant
               id_or_opcode
                %fd284
              ,
              opr_register_or_constant
               id_or_opcode
                %fd271
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd286
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd281
              ,
              opr_register_or_constant
               id_or_opcode
                %fd283
              ,
              opr_register_or_constant
               id_or_opcode
                %fd285
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd281
              ,
              opr_register_or_constant
               id_or_opcode
                %fd282
              ,
              opr_register_or_constant
               id_or_opcode
                %fd286
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_14
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd287
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd287
              ,
              opr_register_or_constant
               id_or_opcode
                %fd287
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r355
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r356
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p90
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r355
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r356
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p90
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_156930
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd288
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd289
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd290
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd288
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd289
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd291
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd292
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd290
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd293
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd294
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd292
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd293
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd295
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd296
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd294
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd295
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd297
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd298
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd296
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd297
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd299
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd300
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd298
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd299
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd301
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd300
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd301
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_156674
         ;
       statement
        label_decl
         $Lt_0_156930
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd302
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd303
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd304
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd302
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd303
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd305
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd306
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd304
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd305
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd307
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd308
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd306
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd307
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd309
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd310
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd308
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd309
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd311
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd312
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd310
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd311
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd313
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd312
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd313
              ,
              opr_register_or_constant
               id_or_opcode
                %fd287
              ,
              opr_register_or_constant
               id_or_opcode
                %fd287
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_156674
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd314
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r357
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r358
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r357
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r358
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd276
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd314
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p91
         ;
       statement
        label_decl
         $LDWendi___isinf_177_13
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd315
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd316
             ,
             opr_register_or_constant
              id_or_opcode
               %fd315
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd317
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r359
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd316
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd317
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r360
             ,
             opr_register_or_constant
              id_or_opcode
               %r359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd318
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r361
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd315
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r362
             ,
             opr_register_or_constant
              id_or_opcode
               %r361
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r363
              ,
              opr
               opr_aux
                id_or_opcode
                 %r360
              ,
              opr
               opr_aux
                id_or_opcode
                 %r362
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r364
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r363
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r364
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p92
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_157186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd319
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd320
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd315
              ,
              opr_register_or_constant
               id_or_opcode
                %fd319
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_9
         ;
       statement
        label_decl
         $Lt_0_157186
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd321
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p93
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd316
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd321
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p93
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_157698
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd313
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd315
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd314
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd313
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd314
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd315
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd313
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r365
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd315
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r366
              ,
              opr
               opr_aux
                id_or_opcode
                 %r365
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r367
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r366
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r368
              ,
              opr
               opr_aux
                id_or_opcode
                 %r367
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r369
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r370
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r369
              ,
              opr_register_or_constant
               id_or_opcode
                %r368
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r370
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r371
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r372
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r371
              ,
              opr_register_or_constant
               id_or_opcode
                %r368
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r373
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r374
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r372
              ,
              opr_register_or_constant
               id_or_opcode
                %r373
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r374
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r370
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p94
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_177666
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r375
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r374
              ,
              opr_register_or_constant
               id_or_opcode
                %r368
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r376
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r375
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r370
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd316
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd313
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd317
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd316
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r377
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r374
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r378
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r377
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r379
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r380
              ,
              opr
               opr_aux
                id_or_opcode
                 %r376
         ;
       statement
        label_decl
         $Lt_0_158722
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd318
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd317
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd319
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd318
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r381
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd318
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd319
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r382
             ,
             opr_register_or_constant
              id_or_opcode
               %r381
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd320
              ,
              opr
               opr_aux
                id_or_opcode
                 %r382
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd321
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd317
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd320
              ,
              opr_register_or_constant
               id_or_opcode
                %rd321
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r379
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd319
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r379
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r379
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p95
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r378
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p95
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_158722
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r374
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_158210
         ;
       statement
        label_decl
         $Lt_0_177666
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_158210
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r383
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r368
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r384
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r383
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r385
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r384
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r386
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r385
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r386
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r387
              ,
              opr
               opr_aux
                id_or_opcode
                 %r367
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r388
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r387
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r388
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p96
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_159234
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r389
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r390
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r389
              ,
              opr_register_or_constant
               id_or_opcode
                %r387
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd322
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r390
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd323
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r387
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd322
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd323
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd324
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd325
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd324
              ,
              opr
               opr_aux
                id_or_opcode
                 %r390
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd326
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r387
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd325
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd326
         ;
       statement
        label_decl
         $Lt_0_159234
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd327
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd327
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd328
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd329
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd328
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd329
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd330
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd330
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p97
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_160002
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd331
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd332
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r391
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd331
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd332
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r392
             ,
             opr_register_or_constant
              id_or_opcode
               %r391
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_159746
         ;
       statement
        label_decl
         $Lt_0_160002
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd333
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r393
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd333
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r392
             ,
             opr_register_or_constant
              id_or_opcode
               %r393
         ;
       statement
        label_decl
         $Lt_0_159746
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r394
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r392
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r395
             ,
             opr_register_or_constant
              id_or_opcode
               %r394
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd334
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p98
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd314
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd334
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r395
              ,
              opr
               opr_aux
                id_or_opcode
                 %r394
              ,
              opr
               opr_aux
                id_or_opcode
                 %p98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r396
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r392
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r396
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p99
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_160258
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd335
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r397
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd335
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r398
             ,
             opr_register_or_constant
              id_or_opcode
               %r397
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd336
              ,
              opr
               opr_aux
                id_or_opcode
                 %r398
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd337
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd336
              ,
              opr_register_or_constant
               id_or_opcode
                %rd337
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd314
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_160258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd338
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p100
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd338
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p100
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_177922
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_161282
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd339
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd340
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd339
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd340
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd341
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p101
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_161282
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_160770
         ;
       statement
        label_decl
         $Lt_0_177922
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_160770
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd342
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd343
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd343
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p102
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_161794
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd344
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd345
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd344
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd345
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_161794
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd346
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r399
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd346
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r400
             ,
             opr_register_or_constant
              id_or_opcode
               %r399
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd347
              ,
              opr
               opr_aux
                id_or_opcode
                 %r400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd347
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd348
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd349
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r401
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd348
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd349
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r402
             ,
             opr_register_or_constant
              id_or_opcode
               %r401
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd350
              ,
              opr
               opr_aux
                id_or_opcode
                 %r402
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd351
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r403
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd352
              ,
              opr
               opr_aux
                id_or_opcode
                 %r403
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd353
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd352
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd354
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd351
              ,
              opr_register_or_constant
               id_or_opcode
                %rd353
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd355
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd350
              ,
              opr_register_or_constant
               id_or_opcode
                %rd354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd356
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd355
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd356
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_10
         ;
       statement
        label_decl
         $Lt_0_157698
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd322
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd323
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd315
              ,
              opr_register_or_constant
               id_or_opcode
                %fd322
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r404
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd323
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r404
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd324
              ,
              opr
               opr_aux
                id_or_opcode
                 %r404
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd325
             ,
             opr_register_or_constant
              id_or_opcode
               %fd324
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd326
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd327
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd328
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd329
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd325
              ,
              opr_register_or_constant
               id_or_opcode
                %fd328
              ,
              opr_register_or_constant
               id_or_opcode
                %fd315
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd330
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd325
              ,
              opr_register_or_constant
               id_or_opcode
                %fd327
              ,
              opr_register_or_constant
               id_or_opcode
                %fd329
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd325
              ,
              opr_register_or_constant
               id_or_opcode
                %fd326
              ,
              opr_register_or_constant
               id_or_opcode
                %fd330
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_10
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd331
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd331
              ,
              opr_register_or_constant
               id_or_opcode
                %fd331
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r405
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r406
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p103
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r405
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r406
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p103
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_162562
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd332
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd333
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd334
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd332
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd333
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd335
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd336
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd334
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd335
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd337
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd338
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd336
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd337
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd339
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd340
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd338
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd339
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd341
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd342
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd340
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd343
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd344
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd342
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd343
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd345
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd344
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd345
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_162306
         ;
       statement
        label_decl
         $Lt_0_162562
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd346
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd347
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd348
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd346
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd347
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd349
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd350
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd348
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd349
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd351
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd352
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd350
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd351
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd353
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd354
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd352
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd353
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd355
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd356
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd354
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd355
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd357
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd356
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd357
              ,
              opr_register_or_constant
               id_or_opcode
                %fd331
              ,
              opr_register_or_constant
               id_or_opcode
                %fd331
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_162306
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd358
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r407
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r408
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p104
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r407
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r408
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd320
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd358
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p104
         ;
       statement
        label_decl
         $LDWendi___isinf_177_9
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd359
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              377
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd360
             ,
             opr_register_or_constant
              id_or_opcode
               %fd359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd361
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r409
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd360
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd361
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r410
             ,
             opr_register_or_constant
              id_or_opcode
               %r409
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd362
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .f64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r411
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd359
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd362
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r412
             ,
             opr_register_or_constant
              id_or_opcode
               %r411
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r413
              ,
              opr
               opr_aux
                id_or_opcode
                 %r410
              ,
              opr
               opr_aux
                id_or_opcode
                 %r412
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r414
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p105
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r413
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r414
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p105
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_162818
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd363
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .rn
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd364
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd359
              ,
              opr_register_or_constant
               id_or_opcode
                %fd363
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_5
         ;
       statement
        label_decl
         $Lt_0_162818
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd365
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p106
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd360
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd365
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p106
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_163330
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd357
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd358
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd357
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd358
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd359
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd357
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r415
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r416
              ,
              opr
               opr_aux
                id_or_opcode
                 %r415
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r417
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r416
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r418
              ,
              opr
               opr_aux
                id_or_opcode
                 %r417
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r419
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r420
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r419
              ,
              opr_register_or_constant
               id_or_opcode
                %r418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r420
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r421
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r422
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r421
              ,
              opr_register_or_constant
               id_or_opcode
                %r418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r423
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r424
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r422
              ,
              opr_register_or_constant
               id_or_opcode
                %r423
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p107
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r424
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r420
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p107
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_178178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r425
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r424
              ,
              opr_register_or_constant
               id_or_opcode
                %r418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r426
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r425
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r420
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd360
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd357
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd361
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd360
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r427
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r424
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r428
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r427
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r429
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r430
              ,
              opr
               opr_aux
                id_or_opcode
                 %r426
         ;
       statement
        label_decl
         $Lt_0_164354
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd362
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd361
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd363
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd362
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r431
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd362
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd363
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r432
             ,
             opr_register_or_constant
              id_or_opcode
               %r431
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd364
              ,
              opr
               opr_aux
                id_or_opcode
                 %r432
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd365
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd8
              ,
              opr_register_or_constant
               id_or_opcode
                %rd361
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd364
              ,
              opr_register_or_constant
               id_or_opcode
                %rd365
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r429
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd363
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r429
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r429
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p108
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r428
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p108
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_164354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r424
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_163842
         ;
       statement
        label_decl
         $Lt_0_178178
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_163842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r433
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r434
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r433
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r435
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r434
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r436
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r435
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r436
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r437
              ,
              opr
               opr_aux
                id_or_opcode
                 %r417
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r438
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p109
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r437
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r438
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p109
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_164866
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r439
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r440
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r439
              ,
              opr_register_or_constant
               id_or_opcode
                %r437
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd366
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r440
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd367
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r437
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd366
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd367
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd368
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_328
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd369
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd368
              ,
              opr
               opr_aux
                id_or_opcode
                 %r440
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd370
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r437
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd369
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd370
         ;
       statement
        label_decl
         $Lt_0_164866
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd371
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd371
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd372
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd373
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd372
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd373
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd374
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p110
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd374
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p110
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_165634
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd375
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd376
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r441
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd375
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd376
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r442
             ,
             opr_register_or_constant
              id_or_opcode
               %r441
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_165378
         ;
       statement
        label_decl
         $Lt_0_165634
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd377
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r443
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd377
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r442
             ,
             opr_register_or_constant
              id_or_opcode
               %r443
         ;
       statement
        label_decl
         $Lt_0_165378
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r444
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r16
              ,
              opr_register_or_constant
               id_or_opcode
                %r442
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r445
             ,
             opr_register_or_constant
              id_or_opcode
               %r444
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd378
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd358
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd378
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r445
              ,
              opr
               opr_aux
                id_or_opcode
                 %r444
              ,
              opr
               opr_aux
                id_or_opcode
                 %p111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r446
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p112
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r442
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r446
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p112
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_165890
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant
              id_or_opcode
               %rd13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd379
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r447
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd379
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r448
             ,
             opr_register_or_constant
              id_or_opcode
               %r447
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd380
              ,
              opr
               opr_aux
                id_or_opcode
                 %r448
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd381
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd380
              ,
              opr_register_or_constant
               id_or_opcode
                %rd381
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd358
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_165890
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd382
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p113
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd382
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p113
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_178434
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_166914
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd383
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd384
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd383
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd384
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd385
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p114
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd385
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p114
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_166914
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_166402
         ;
       statement
        label_decl
         $Lt_0_178434
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_166402
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd386
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd7
              ,
              opr_register_or_constant
               id_or_opcode
                %rd386
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd387
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p115
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd387
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p115
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_167426
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd388
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd389
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd388
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd389
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_167426
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd390
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r449
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd390
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r450
             ,
             opr_register_or_constant
              id_or_opcode
               %r449
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd391
              ,
              opr
               opr_aux
                id_or_opcode
                 %r450
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd391
              ,
              opr_register_or_constant
               id_or_opcode
                %rd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd392
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd393
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r451
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd392
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd393
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r452
             ,
             opr_register_or_constant
              id_or_opcode
               %r451
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd394
              ,
              opr
               opr_aux
                id_or_opcode
                 %r452
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd395
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r453
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd396
              ,
              opr
               opr_aux
                id_or_opcode
                 %r453
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd397
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd396
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd398
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd395
              ,
              opr_register_or_constant
               id_or_opcode
                %rd397
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd399
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd394
              ,
              opr_register_or_constant
               id_or_opcode
                %rd398
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd400
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd399
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_6
         ;
       statement
        label_decl
         $Lt_0_163330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd366
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd367
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd359
              ,
              opr_register_or_constant
               id_or_opcode
                %fd366
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r454
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd367
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r454
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd368
              ,
              opr
               opr_aux
                id_or_opcode
                 %r454
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd369
             ,
             opr_register_or_constant
              id_or_opcode
               %fd368
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd370
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd371
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd372
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd373
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd369
              ,
              opr_register_or_constant
               id_or_opcode
                %fd372
              ,
              opr_register_or_constant
               id_or_opcode
                %fd359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd374
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd369
              ,
              opr_register_or_constant
               id_or_opcode
                %fd371
              ,
              opr_register_or_constant
               id_or_opcode
                %fd373
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd9
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd369
              ,
              opr_register_or_constant
               id_or_opcode
                %fd370
              ,
              opr_register_or_constant
               id_or_opcode
                %fd374
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_6
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              380
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd375
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd375
              ,
              opr_register_or_constant
               id_or_opcode
                %fd375
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r455
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r456
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p116
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r455
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r456
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p116
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_168194
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd376
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd377
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd378
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd376
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd377
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd379
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd380
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd378
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd379
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd381
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd382
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd380
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd381
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd383
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd384
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd382
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd383
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd385
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd386
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd384
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd385
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd387
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd388
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd386
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd387
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd389
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd388
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd389
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              383
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_167938
         ;
       statement
        label_decl
         $Lt_0_168194
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd390
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd391
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd392
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd390
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd391
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd393
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd394
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd392
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd393
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd395
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd396
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd394
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd395
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd397
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd398
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd396
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd397
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd399
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd400
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd398
              ,
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd399
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd401
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd400
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd401
              ,
              opr_register_or_constant
               id_or_opcode
                %fd375
              ,
              opr_register_or_constant
               id_or_opcode
                %fd375
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              385
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd49
         ;
       statement
        label_decl
         $Lt_0_167938
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd402
             ,
             opr_register_or_constant
              id_or_opcode
               %fd36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r457
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r458
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p117
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r457
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r458
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd364
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd402
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd36
              ,
              opr
               opr_aux
                id_or_opcode
                 %p117
         ;
       statement
        label_decl
         $LDWendi___isinf_177_5
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              16
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd403
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd56
              ,
              opr_register_or_constant
               id_or_opcode
                %fd7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd404
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd100
              ,
              opr_register_or_constant
               id_or_opcode
                %fd403
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd405
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd144
              ,
              opr_register_or_constant
               id_or_opcode
                %fd404
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd406
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd188
              ,
              opr_register_or_constant
               id_or_opcode
                %fd405
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd407
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd232
              ,
              opr_register_or_constant
               id_or_opcode
                %fd406
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd408
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd276
              ,
              opr_register_or_constant
               id_or_opcode
                %fd407
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd409
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd320
              ,
              opr_register_or_constant
               id_or_opcode
                %fd408
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd410
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd364
              ,
              opr_register_or_constant
               id_or_opcode
                %fd409
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd410
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              17
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd411
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              425
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f64
            i_abs_opr
             opr_register
              id_or_opcode
               %fd412
             ,
             opr_register_or_constant
              id_or_opcode
               %fd411
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d7ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p118
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd412
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd413
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p118
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_168450
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd414
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dfff8000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___isinf_177_1
         ;
       statement
        label_decl
         $Lt_0_168450
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd415
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d41e0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p119
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd412
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd415
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p119
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_168962
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd401
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd411
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b64
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd402
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd401
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd403
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd402
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd404
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd401
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r459
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd404
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r460
              ,
              opr
               opr_aux
                id_or_opcode
                 %r459
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2047
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r461
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r460
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r462
              ,
              opr
               opr_aux
                id_or_opcode
                 %r461
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r463
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r464
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r463
              ,
              opr_register_or_constant
               id_or_opcode
                %r462
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r465
              ,
              opr
               opr_aux
                id_or_opcode
                 %r464
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r466
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r467
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r466
              ,
              opr_register_or_constant
               id_or_opcode
                %r462
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r468
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_min
            min
            i_min_type
             .s32
            i_min_opr
             opr_register
              id_or_opcode
               %r469
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r467
              ,
              opr_register_or_constant
               id_or_opcode
                %r468
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p120
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r469
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r464
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p120
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_178690
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r470
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_7248
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r471
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r469
              ,
              opr_register_or_constant
               id_or_opcode
                %r462
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r472
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r471
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r473
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r464
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r474
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r473
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd405
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd401
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd406
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd405
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r475
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r469
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r476
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r475
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r477
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r470
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r478
              ,
              opr
               opr_aux
                id_or_opcode
                 %r472
         ;
       statement
        label_decl
         $Lt_0_169986
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd408
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r474
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd409
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd406
              ,
              opr_register_or_constant
               id_or_opcode
                %rd408
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd410
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd409
              ,
              opr_register_or_constant
               id_or_opcode
                %rd407
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r479
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd409
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd410
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r480
             ,
             opr_register_or_constant
              id_or_opcode
               %r479
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd411
              ,
              opr
               opr_aux
                id_or_opcode
                 %r480
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd412
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd408
              ,
              opr_register_or_constant
               id_or_opcode
                %rd406
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd407
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd411
              ,
              opr_register_or_constant
               id_or_opcode
                %rd412
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              183
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r477
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd410
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r477
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r477
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r474
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r474
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p121
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r474
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r476
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p121
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_169986
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r465
              ,
              opr
               opr_aux
                id_or_opcode
                 %r469
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_169474
         ;
       statement
        label_decl
         $Lt_0_178690
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r470
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_result_7248
         ;
       statement
        label_decl
         $Lt_0_169474
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              185
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r481
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r465
              ,
              opr_register_or_constant
               id_or_opcode
                %r462
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r482
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r481
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r483
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r482
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r484
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r470
              ,
              opr_register_or_constant
               id_or_opcode
                %r483
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .local
             .u64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r484
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %rd407
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd407
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_7248
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd413
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_7248
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r485
              ,
              opr
               opr_aux
                id_or_opcode
                 %r461
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r486
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p122
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r485
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r486
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p122
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_170498
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r487
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r488
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r487
              ,
              opr_register_or_constant
               id_or_opcode
                %r485
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd414
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %r488
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd415
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                id_or_opcode
                 %r485
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd414
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd415
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              195
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .local
             .u64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %rd416
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_result_7248
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd417
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd416
              ,
              opr
               opr_aux
                id_or_opcode
                 %r488
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd418
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %r485
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd417
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd418
         ;
       statement
        label_decl
         $Lt_0_170498
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd419
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r465
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd419
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd420
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd421
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd420
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd421
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              200
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd422
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p123
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd413
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd422
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p123
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_171266
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd423
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd424
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r489
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd423
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd424
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r490
             ,
             opr_register_or_constant
              id_or_opcode
               %r489
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_171010
         ;
       statement
        label_decl
         $Lt_0_171266
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd425
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r491
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd407
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd425
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r490
             ,
             opr_register_or_constant
              id_or_opcode
               %r491
         ;
       statement
        label_decl
         $Lt_0_171010
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              202
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r492
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r465
              ,
              opr_register_or_constant
               id_or_opcode
                %r490
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              201
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r493
             ,
             opr_register_or_constant
              id_or_opcode
               %r492
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd426
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p124
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd402
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd426
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r465
              ,
              opr
               opr_aux
                id_or_opcode
                 %r493
              ,
              opr
               opr_aux
                id_or_opcode
                 %r492
              ,
              opr
               opr_aux
                id_or_opcode
                 %p124
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r494
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p125
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r490
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r494
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p125
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_171522
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              207
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s64
            i_neg_opr
             opr_register
              id_or_opcode
               %rd413
             ,
             opr_register_or_constant
              id_or_opcode
               %rd413
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd427
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .eq
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r495
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd413
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd427
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r496
             ,
             opr_register_or_constant
              id_or_opcode
               %r495
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd428
              ,
              opr
               opr_aux
                id_or_opcode
                 %r496
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b64
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd429
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd407
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd428
              ,
              opr_register_or_constant
               id_or_opcode
                %rd429
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              210
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b64
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd403
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd402
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   9223372036854775808
         ;
       statement
        label_decl
         $Lt_0_171522
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r497
              ,
              opr
               opr_aux
                id_or_opcode
                 %r465
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd430
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p126
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd407
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd430
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p126
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_178946
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r498
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_172546
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              216
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd431
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd432
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd431
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd432
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              218
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r498
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r498
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd433
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p127
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd407
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd433
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p127
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_172546
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_172034
         ;
       statement
        label_decl
         $Lt_0_178946
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r498
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_172034
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd413
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd407
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3958705157555305931
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd434
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   3958705157555305931
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .hi
             .u64
            i_mul_opr
             opr_register
              id_or_opcode
               %rd407
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd407
              ,
              opr_register_or_constant
               id_or_opcode
                %rd434
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd435
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p128
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd407
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd435
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p128
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_173058
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              223
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd436
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd437
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd436
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd437
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              224
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd413
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              225
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r498
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r498
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        label_decl
         $Lt_0_173058
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              227
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd438
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ne
              .u32
              .u64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r499
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd413
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd438
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r500
             ,
             opr_register_or_constant
              id_or_opcode
               %r499
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd439
              ,
              opr
               opr_aux
                id_or_opcode
                 %r500
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd407
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd439
              ,
              opr_register_or_constant
               id_or_opcode
                %rd407
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd440
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd441
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .s64
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r501
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd440
               ,
               opr
                opr_aux
                 id_or_opcode
                  %rd441
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r502
             ,
             opr_register_or_constant
              id_or_opcode
               %r501
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd442
              ,
              opr
               opr_aux
                id_or_opcode
                 %r502
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u64
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd443
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r503
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r498
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1022
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u64
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rd444
              ,
              opr
               opr_aux
                id_or_opcode
                 %r503
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b64
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd445
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd444
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd446
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd443
              ,
              opr_register_or_constant
               id_or_opcode
                %rd445
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u64
            i_add_opr
             opr_register
              id_or_opcode
               %rd447
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %rd442
              ,
              opr_register_or_constant
               id_or_opcode
                %rd446
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b64
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %rd448
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd403
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd447
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd416
              ,
              opr
               opr_aux
                id_or_opcode
                 %rd448
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi___internal_trig_reduction_kerneld_177_2
         ;
       statement
        label_decl
         $Lt_0_168962
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              242
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd417
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fe45f306dc9c883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd418
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd411
              ,
              opr_register_or_constant
               id_or_opcode
                %fd417
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .s32
             .f64
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r504
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r497
              ,
              opr
               opr_aux
                id_or_opcode
                 %r504
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd419
              ,
              opr
               opr_aux
                id_or_opcode
                 %r504
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd420
             ,
             opr_register_or_constant
              id_or_opcode
               %fd419
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd421
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d397b839a252049c0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd422
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3c91a62633145c00
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd423
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff921fb54442d18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd424
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd420
              ,
              opr_register_or_constant
               id_or_opcode
                %fd423
              ,
              opr_register_or_constant
               id_or_opcode
                %fd411
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd425
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd420
              ,
              opr_register_or_constant
               id_or_opcode
                %fd422
              ,
              opr_register_or_constant
               id_or_opcode
                %fd424
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd416
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd420
              ,
              opr_register_or_constant
               id_or_opcode
                %fd421
              ,
              opr_register_or_constant
               id_or_opcode
                %fd425
         ;
       statement
        label_decl
         $LDWendi___internal_trig_reduction_kerneld_177_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              428
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r505
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r497
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd426
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd416
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd427
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd426
              ,
              opr_register_or_constant
               id_or_opcode
                %fd426
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r506
              ,
              opr
               opr_aux
                id_or_opcode
                 %r505
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r507
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p129
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r506
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r507
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p129
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_173826
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd428
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbda8ff8d5a8f03db
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd429
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3e21eea7d67fad92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd430
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd428
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd429
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd431
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe927e4f8e26b8e3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd432
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd430
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd431
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd433
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3efa01a019ddec33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd434
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd432
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd433
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd435
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf56c16c16c15d69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd436
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd434
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd435
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd437
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3fa5555555555551
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd438
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd436
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd437
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd439
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfe0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd440
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd438
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd439
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              274
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd441
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ff0000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd442
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd440
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd441
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              432
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd443
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd442
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_173570
         ;
       statement
        label_decl
         $Lt_0_173826
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              257
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd444
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3de5d8fd1fcf0ec1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd445
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbe5ae5e5a9291691
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd446
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd444
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd445
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd447
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3ec71de3567d4896
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd448
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd446
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd447
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd449
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbf2a01a019bfdf03
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd450
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd448
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd449
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd451
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d3f8111111110f7d0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd452
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd450
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd451
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd453
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0dbfc5555555555548
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd454
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd452
              ,
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd453
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd455
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd427
              ,
              opr_register_or_constant
               id_or_opcode
                %fd454
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd456
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd455
              ,
              opr_register_or_constant
               id_or_opcode
                %fd426
              ,
              opr_register_or_constant
               id_or_opcode
                %fd426
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              28
            integer
             base_10_integer
              434
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd443
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd456
         ;
       statement
        label_decl
         $Lt_0_173570
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .f64
            i_neg_opr
             opr_register
              id_or_opcode
               %fd457
             ,
             opr_register_or_constant
              id_or_opcode
               %fd443
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r508
              ,
              opr
               opr_aux
                id_or_opcode
                 %r505
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r509
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p130
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r508
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r509
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f64
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %fd414
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd457
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd443
              ,
              opr
               opr_aux
                id_or_opcode
                 %p130
         ;
       statement
        label_decl
         $LDWendi___isinf_177_1
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              17
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd458
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd459
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd414
              ,
              opr_register_or_constant
               id_or_opcode
                %fd458
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd459
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              18
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd460
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd461
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4014000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd462
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd460
              ,
              opr_register_or_constant
               id_or_opcode
                %fd461
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd462
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              19
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd463
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sqrt
            sqrt
            i_sqrt_type
             .rn
             .f64
            i_sqrt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd464
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd463
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f64
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %fd464
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              20
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z3funPd
         :
       }
 <EOF>
