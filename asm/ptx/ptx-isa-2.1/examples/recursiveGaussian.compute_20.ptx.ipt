prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaretf__Z14rgbaFloatToInt6float4
      )
      func_name
       _Z14rgbaFloatToInt6float4
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           16
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z14rgbaFloatToInt6float4
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            16
          ]
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           16
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z14rgbaIntToFloatj
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            16
          ]
      )
      func_name
       _Z14rgbaIntToFloatj
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z14rgbaIntToFloatj
      )
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "recursiveGaussian.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "c:\ProgramData\NVIDIA Corporation\NVIDIA GPU Computing SDK\C\common\inc\cutil_math.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:\ProgramData\NVIDIA Corporation\NVIDIA GPU Computing SDK\C\src\recursiveGaussian\recursiveGaussian_kernel.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaretf__Z14rgbaFloatToInt6float4
      )
      func_name
       _Z14rgbaFloatToInt6float4
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           16
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z14rgbaFloatToInt6float4
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            16
          ]
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                12
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                22
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              63
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z14rgbaFloatToInt6float4
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14rgbaFloatToInt6float4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14rgbaFloatToInt6float4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14rgbaFloatToInt6float4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14rgbaFloatToInt6float4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              64
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              65
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              66
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f6
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              67
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f8
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              68
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z14rgbaFloatToInt6float4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z14rgbaFloatToInt6float4
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           16
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z14rgbaIntToFloatj
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            16
          ]
      )
      func_name
       _Z14rgbaIntToFloatj
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z14rgbaIntToFloatj
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                10
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                14
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              73
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z14rgbaIntToFloatj
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14rgbaIntToFloatj
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              79
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z14rgbaIntToFloatj
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z14rgbaIntToFloatj
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z14rgbaIntToFloatj
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z14rgbaIntToFloatj
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z14rgbaIntToFloatj
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z11d_transposePjS_ii
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z11d_transposePjS_ii_odata
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z11d_transposePjS_ii_idata
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z11d_transposePjS_ii_width
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z11d_transposePjS_ii_height
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                47
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               4
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_288227_33_block16
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 1088
               ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              33
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z11d_transposePjS_ii
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r2
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r4
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11d_transposePjS_ii_height
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11d_transposePjS_ii_width
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .u32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant
              id_or_opcode
               %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .u32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant
              id_or_opcode
               %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_2306
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              43
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_288227_33_block16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11d_transposePjS_ii_idata
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r23
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r22
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r27
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r23
         ;
       statement
        label_decl
         $Lt_2_2306
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_288227_33_block16
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              46
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .u32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .u32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r33
             ,
             opr_register_or_constant
              id_or_opcode
               %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
              ,
              opr
               opr_aux
                id_or_opcode
                 %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_2818
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              54
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               id_or_opcode
                %r36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r37
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r40
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r39
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r41
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z11d_transposePjS_ii_odata
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r28
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r29
              ,
              opr_register_or_constant
               id_or_opcode
                %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r41
              ,
              opr_register_or_constant
               id_or_opcode
                %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r45
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r40
         ;
       statement
        label_decl
         $Lt_2_2818
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              56
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z11d_transposePjS_ii
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z22d_simpleRecursive_rgbaPjS_iif
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif___val_paramid
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif___val_paramod
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_w
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_h
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_a
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                86
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                119
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                7
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              95
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z22d_simpleRecursive_rgbaPjS_iif
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_w
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_3074
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LBB14__Z22d_simpleRecursive_rgbaPjS_iif
         ;
       statement
        label_decl
         $Lt_3_3074
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif___val_paramid
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              101
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif___val_paramod
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              104
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_h
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_5634
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r23
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r25
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_a
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        label_decl
         $Lt_3_4098
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              106
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r29
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r25
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r31
              ,
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f14
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f20
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f17
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f28
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f38
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                id_or_opcode
                 %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f47
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r45
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_4098
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r47
              ,
              opr_register_or_constant
               id_or_opcode
                %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r47
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_3586
         ;
       statement
        label_decl
         $Lt_3_5634
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        label_decl
         $Lt_3_3586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              114
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              115
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              119
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r48
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f51
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f50
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f54
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r54
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f57
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              120
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $LBB14__Z22d_simpleRecursive_rgbaPjS_iif
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z22d_simpleRecursive_rgbaPjS_iif_a
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r59
              ,
              opr
               opr_aux
                id_or_opcode
                 %r58
         ;
       statement
        label_decl
         $Lt_3_5122
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              121
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r60
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              123
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r13
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f61
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f58
              ,
              opr_register_or_constant
               id_or_opcode
                %f62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f59
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f60
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f61
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f70
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f71
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f72
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f73
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f63
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f67
              ,
              opr_register_or_constant
               id_or_opcode
                %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f82
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f85
              ,
              opr_register_or_constant
               id_or_opcode
                %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f88
              ,
              opr
               opr_aux
                id_or_opcode
                 %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f89
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f91
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f92
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f91
              ,
              opr_register_or_constant
               id_or_opcode
                %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f80
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f95
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f94
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f97
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r73
              ,
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f100
              ,
              opr_register_or_constant
               id_or_opcode
                %f101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f78
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f104
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f103
              ,
              opr_register_or_constant
               id_or_opcode
                %f104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f106
              ,
              opr
               opr_aux
                id_or_opcode
                 %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f106
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f109
              ,
              opr
               opr_aux
                id_or_opcode
                 %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f110
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f113
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f115
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f116
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f115
              ,
              opr_register_or_constant
               id_or_opcode
                %f116
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r13
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              124
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              125
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_5122
         ;
       statement
        label_decl
         $LBB14__Z22d_simpleRecursive_rgbaPjS_iif
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              127
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z22d_simpleRecursive_rgbaPjS_iif
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z24d_recursiveGaussian_rgbaPjS_iiffffffff
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff___val_paramid
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff___val_paramod
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_w
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_h
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a0
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a2
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a3
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b2
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_coefp
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_coefn
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                86
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                182
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                7
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              141
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z24d_recursiveGaussian_rgbaPjS_iiffffffff
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_w
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_3074
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LBB14__Z24d_recursiveGaussian_rgbaPjS_iiffffffff
         ;
       statement
        label_decl
         $Lt_4_3074
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff___val_paramid
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              147
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff___val_paramod
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_coefp
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f23
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                id_or_opcode
                 %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_h
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_5634
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r23
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r25
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f31
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f32
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f33
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        label_decl
         $Lt_4_4098
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              157
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r29
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r25
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              158
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f37
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f42
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r31
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f47
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f49
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f51
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f28
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f57
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f57
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f59
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f54
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f61
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f67
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f71
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f72
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              159
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f74
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f77
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f80
              ,
              opr_register_or_constant
               id_or_opcode
                %f81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r45
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              161
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %f69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                id_or_opcode
                 %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f23
              ,
              opr
               opr_aux
                id_or_opcode
                 %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                id_or_opcode
                 %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_4098
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r47
              ,
              opr_register_or_constant
               id_or_opcode
                %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r47
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_3586
         ;
       statement
        label_decl
         $Lt_4_5634
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        label_decl
         $Lt_4_3586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              166
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              175
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r48
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f86
              ,
              opr_register_or_constant
               id_or_opcode
                %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f89
              ,
              opr
               opr_aux
                id_or_opcode
                 %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f90
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f91
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f90
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f95
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f94
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r54
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f98
              ,
              opr_register_or_constant
               id_or_opcode
                %f99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f103
              ,
              opr
               opr_aux
                id_or_opcode
                 %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f104
              ,
              opr
               opr_aux
                id_or_opcode
                 %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f105
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f106
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_coefn
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f110
              ,
              opr
               opr_aux
                id_or_opcode
                 %f109
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f100
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f115
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f116
              ,
              opr
               opr_aux
                id_or_opcode
                 %f109
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f118
              ,
              opr
               opr_aux
                id_or_opcode
                 %f113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              177
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $LBB14__Z24d_recursiveGaussian_rgbaPjS_iiffffffff
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f32
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f33
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_b1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f119
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a3
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f120
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z24d_recursiveGaussian_rgbaPjS_iiffffffff_a2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r59
              ,
              opr
               opr_aux
                id_or_opcode
                 %r58
         ;
       statement
        label_decl
         $Lt_4_5122
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              178
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r60
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              179
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f89
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f122
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f115
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f126
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f93
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f128
              ,
              opr
               opr_aux
                id_or_opcode
                 %f103
              ,
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f130
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f128
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f116
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f132
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f97
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f134
              ,
              opr
               opr_aux
                id_or_opcode
                 %f104
              ,
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f134
              ,
              opr_register_or_constant
               id_or_opcode
                %f135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f117
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f138
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f136
              ,
              opr_register_or_constant
               id_or_opcode
                %f137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f101
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f140
              ,
              opr
               opr_aux
                id_or_opcode
                 %f105
              ,
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f141
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f140
              ,
              opr_register_or_constant
               id_or_opcode
                %f141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f118
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f142
              ,
              opr_register_or_constant
               id_or_opcode
                %f143
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              180
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f89
              ,
              opr
               opr_aux
                id_or_opcode
                 %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f145
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f146
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f145
              ,
              opr_register_or_constant
               id_or_opcode
                %f146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f147
              ,
              opr
               opr_aux
                id_or_opcode
                 %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f148
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f147
              ,
              opr_register_or_constant
               id_or_opcode
                %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f149
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f150
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f150
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f151
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f115
              ,
              opr
               opr_aux
                id_or_opcode
                 %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f116
              ,
              opr
               opr_aux
                id_or_opcode
                 %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f118
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f110
              ,
              opr
               opr_aux
                id_or_opcode
                 %f132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r67
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r13
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f153
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f157
              ,
              opr
               opr_aux
                id_or_opcode
                 %f156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f159
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f160
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f161
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f132
              ,
              opr_register_or_constant
               id_or_opcode
                %f162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f164
              ,
              opr
               opr_aux
                id_or_opcode
                 %f163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f165
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f164
              ,
              opr_register_or_constant
               id_or_opcode
                %f165
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r73
              ,
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f167
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f168
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f167
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f169
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f171
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f172
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f171
              ,
              opr_register_or_constant
               id_or_opcode
                %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f174
              ,
              opr
               opr_aux
                id_or_opcode
                 %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f175
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f174
              ,
              opr_register_or_constant
               id_or_opcode
                %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f177
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f144
              ,
              opr_register_or_constant
               id_or_opcode
                %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f178
              ,
              opr
               opr_aux
                id_or_opcode
                 %f177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f179
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f437f0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f180
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r13
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .u32
            i_sub_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_5122
         ;
       statement
        label_decl
         $LBB14__Z24d_recursiveGaussian_rgbaPjS_iiffffffff
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              184
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z24d_recursiveGaussian_rgbaPjS_iiffffffff
         :
       }
 <EOF>
