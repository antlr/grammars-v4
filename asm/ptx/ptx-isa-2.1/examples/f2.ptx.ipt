prog
 version
  .version
  float_
   1.4
 target
  .target
  target_list
   sm_11
   ,
   map_f64_to_f32
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "Mandelbrot_sm11.compute_11.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\mandelbrot\Mandelbrot_kernel.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:/ProgramData/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/src/Mandelbrot/Mandelbrot_sm11.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\math_functions_dbl_ptx1.h"
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .u32
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          blockCounter
        equal_initializer
         =
         variable_initializer
          constant_expression
           constant_expression_aux
            conditional_expression
             conditional_or_expression
              conditional_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       unary_expression
                        unary_expression_not_plus_minus
                         primary
                          integer
                           base_10_integer
                            1
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .u32
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          b2
        equal_initializer
         =
         variable_initializer
          constant_expression
           constant_expression_aux
            conditional_expression
             conditional_or_expression
              conditional_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       unary_expression
                        unary_expression_not_plus_minus
                         primary
                          integer
                           base_10_integer
                            1
       ,
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          b3
        equal_initializer
         =
         variable_initializer
          constant_expression
           constant_expression_aux
            conditional_expression
             conditional_or_expression
              conditional_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       unary_expression
                        unary_expression_not_plus_minus
                         primary
                          integer
                           base_10_integer
                            2
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .u32
       variable_declarator
        id_or_opcode
         b4
       ,
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          b5
        equal_initializer
         =
         variable_initializer
          constant_expression
           constant_expression_aux
            conditional_expression
             conditional_or_expression
              conditional_and_expression
               inclusive_or_expression
                exclusive_or_expression
                 and_expression
                  equality_expression
                   relational_expression
                    shift_expression
                     additive_expression
                      multiplicative_expression
                       unary_expression
                        unary_expression_not_plus_minus
                         primary
                          integer
                           base_10_integer
                            2
   ;
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xOff0
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xOff1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yOff0
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yOff1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                86
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                228
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                15
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279415_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279416_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279416_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            variable_declarator_list_
             type
              fundamental_type
               fundamental_type_aux
                .u32
             variable_declarator
              id_or_opcode
               aa
             ,
             variable_declarator
              id_or_opcode
               bb
             ,
             variable_declarator
              id_or_opcode
               cc
             ,
             variable_declarator
              id_or_opcode
               dd
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            global_space_specifier
             global
              .global
            variable_declarator_list_
             type
              fundamental_type
               fundamental_type_aux
                .u32
             variable_declarator
              id_or_opcode
               gg
             ,
             variable_declarator
              id_or_opcode
               hh
             ,
             variable_declarator
              id_or_opcode
               ii
             ,
             variable_declarator
              id_or_opcode
               jj
              array_spec
               array_spec_aux
                [
                integer
                 base_10_integer
                  10
                ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            variable_declarator_list_
             type
              fundamental_type
               fundamental_type_aux
                .u32
             variable_declarator
              id_or_opcode
               ss
             ,
             variable_declarator
              id_or_opcode
               tt
             ,
             variable_declarator
              id_or_opcode
               uu
             ,
             variable_declarator
              id_or_opcode
               vv
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              pp
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              opcode
               mov
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 aa
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
                            +
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
                            +
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 aa
              ,
              opr
               opr_aux
                id_or_opcode
                 opcode
                  mov
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant2
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
              ,
              opr_register_or_constant
               id_or_opcode
                bb
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               id_or_opcode
                cc
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant2
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 11
                           +
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 22
                           -
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 33
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .hi
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               id_or_opcode
                cc
              ,
              opr_register_or_constant
               id_or_opcode
                dd
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .hi
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               id_or_opcode
                cc
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .hi
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .hi
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 22
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .lo
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               id_or_opcode
                cc
              ,
              opr_register_or_constant
               id_or_opcode
                dd
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .lo
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               id_or_opcode
                cc
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad24
            mad24
            i_mad24_type
             .lo
             .u32
            i_mad24_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant3
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 22
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                bb
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_prmt
            prmt
            i_prmt_type
             .b32
             .f4e
            i_prmt_opr
             opr_register
              id_or_opcode
               aa
             ,
             opr_register
              id_or_opcode
               bb
             ,
             opr_register
              id_or_opcode
               cc
             ,
             opr_register
              id_or_opcode
               dd
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_0_5890
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              116
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_9474
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              119
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279415_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              121
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279416_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              122
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279416_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_0_9474
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              125
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              128
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279415_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279416_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279416_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_5890
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              141
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xOff0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xOff1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              142
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yOff0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f17
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f18
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f17
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f25
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yOff1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              145
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_10754
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              382
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              384
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f31
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              386
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              387
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              388
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              389
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              390
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f37
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f37
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f45
              ,
              opr_register_or_constant
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f43
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f50
              ,
              opr_register_or_constant
               id_or_opcode
                %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f53
              ,
              opr_register_or_constant
               id_or_opcode
                %f54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f57
              ,
              opr_register_or_constant
               id_or_opcode
                %f44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              391
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f70
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f68
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f78
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f75
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f78
              ,
              opr_register_or_constant
               id_or_opcode
                %f79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f82
              ,
              opr_register_or_constant
               id_or_opcode
                %f69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_10498
         ;
       statement
        label_decl
         $Lt_0_10754
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              394
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                id_or_opcode
                 %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              395
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              396
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              397
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              405
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_0_10498
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r36
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_12034
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f58
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f91
              ,
              opr_register_or_constant
               id_or_opcode
                %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f93
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f94
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f95
              ,
              opr_register_or_constant
               id_or_opcode
                %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f100
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_12034
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f32
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f104
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f104
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f32
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        label_decl
         $L_0_8450
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              410
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f116
              ,
              opr_register_or_constant
               id_or_opcode
                %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f119
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f120
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f122
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f118
              ,
              opr_register_or_constant
               id_or_opcode
                %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f124
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f126
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f128
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              411
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f130
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f132
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f132
              ,
              opr_register_or_constant
               id_or_opcode
                %f134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f135
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f136
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f138
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              412
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f141
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f31
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f146
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f144
              ,
              opr_register_or_constant
               id_or_opcode
                %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f146
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f147
              ,
              opr_register_or_constant
               id_or_opcode
                %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f149
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f148
              ,
              opr_register_or_constant
               id_or_opcode
                %f150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              415
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f151
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f152
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f157
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f156
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f159
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f163
              ,
              opr_register_or_constant
               id_or_opcode
                %f164
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f158
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f165
              ,
              opr_register_or_constant
               id_or_opcode
                %f167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f87
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f169
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f169
              ,
              opr_register_or_constant
               id_or_opcode
                %f171
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              417
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f172
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f174
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f175
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f173
              ,
              opr_register_or_constant
               id_or_opcode
                %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f177
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f173
              ,
              opr_register_or_constant
               id_or_opcode
                %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f178
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f175
              ,
              opr_register_or_constant
               id_or_opcode
                %f177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f180
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f179
              ,
              opr_register_or_constant
               id_or_opcode
                %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f182
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f183
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f177
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f185
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f182
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f175
              ,
              opr_register_or_constant
               id_or_opcode
                %f184
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f187
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f183
              ,
              opr_register_or_constant
               id_or_opcode
                %f186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f189
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f187
              ,
              opr_register_or_constant
               id_or_opcode
                %f188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f190
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f191
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f191
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f192
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f190
              ,
              opr_register_or_constant
               id_or_opcode
                %f192
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              418
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f193
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f193
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f195
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f196
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f197
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f194
              ,
              opr_register_or_constant
               id_or_opcode
                %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f198
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f195
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f194
              ,
              opr_register_or_constant
               id_or_opcode
                %f197
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f199
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f196
              ,
              opr_register_or_constant
               id_or_opcode
                %f198
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f200
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f201
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f200
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f202
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f203
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f204
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f198
              ,
              opr_register_or_constant
               id_or_opcode
                %f202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f205
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f206
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f207
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f196
              ,
              opr_register_or_constant
               id_or_opcode
                %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f208
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f209
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f204
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f210
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f208
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f211
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f212
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f213
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f212
              ,
              opr_register_or_constant
               id_or_opcode
                %f199
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f211
              ,
              opr_register_or_constant
               id_or_opcode
                %f213
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              419
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f214
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f215
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f216
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f217
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f218
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f212
              ,
              opr_register_or_constant
               id_or_opcode
                %f217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f219
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f216
              ,
              opr_register_or_constant
               id_or_opcode
                %f218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f220
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f85
              ,
              opr_register_or_constant
               id_or_opcode
                %f219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f221
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f60
              ,
              opr_register_or_constant
               id_or_opcode
                %f220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f223
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f222
              ,
              opr_register_or_constant
               id_or_opcode
                %f214
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f224
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f221
              ,
              opr_register_or_constant
               id_or_opcode
                %f223
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r37
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_12034
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f226
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f225
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f226
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_0_8450
         ;
       statement
        label_decl
         $Lt_0_12034
         :
       statement
        label_decl
         $L_0_8706
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              145
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r36
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              145
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %p11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r43
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_11266
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r45
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r47
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              153
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r50
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r53
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_11010
         ;
       statement
        label_decl
         $Lt_0_11266
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              158
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_0_11010
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              128
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              158
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r59
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_0_11778
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v4
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_5890
         ;
       statement
        label_decl
         $Lt_0_11778
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              158
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib_frame
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              169
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r67
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r70
               ,
               id_or_opcode
                %r71
               ,
               id_or_opcode
                %r72
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r49
              ,
              opr_register_or_constant
               id_or_opcode
                %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r75
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              170
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r52
              ,
              opr_register_or_constant
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              171
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r83
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_0_5890
         ;
       statement
        label_decl
         $Lt_0_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              176
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z18MandelbrotDS0_sm11P6uchar4iiifffffffS_iiiib
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xOff0
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xOff1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yOff0
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yOff1
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                175
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                228
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                19
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279563_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279564_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279564_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              258
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_1_12034
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              264
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_16642
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              267
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279563_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279564_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279564_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_1_16642
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              272
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              275
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279563_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279564_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279564_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_12034
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r39
               ,
               id_or_opcode
                %r40
               ,
               id_or_opcode
                %r41
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_17922
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r43
               ,
               id_or_opcode
                %r44
               ,
               id_or_opcode
                %r45
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              289
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant
              id_or_opcode
               %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r47
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant
              id_or_opcode
               %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant
              id_or_opcode
               %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant
              id_or_opcode
               %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant
              id_or_opcode
               %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant
              id_or_opcode
               %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_1_17666
         ;
       statement
        label_decl
         $Lt_1_17922
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_1_17666
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              275
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              289
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_18178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r64
               ,
               id_or_opcode
                %r65
               ,
               id_or_opcode
                %r66
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              291
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r66
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant
              id_or_opcode
               %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r71
             ,
             opr_register_or_constant
              id_or_opcode
               %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r64
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant
              id_or_opcode
               %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r75
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r73
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant
              id_or_opcode
               %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r65
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant
              id_or_opcode
               %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r80
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r78
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant
              id_or_opcode
               %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r83
         ;
       statement
        label_decl
         $Lt_1_18178
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_18690
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              275
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r86
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r88
               ,
               id_or_opcode
                %r89
               ,
               id_or_opcode
                %r90
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r87
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r90
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant
              id_or_opcode
               %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r88
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r97
             ,
             opr_register_or_constant
              id_or_opcode
               %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r100
             ,
             opr_register_or_constant
              id_or_opcode
               %r99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r89
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant
              id_or_opcode
               %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r104
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r105
             ,
             opr_register_or_constant
              id_or_opcode
               %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        label_decl
         $Lt_1_18690
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              275
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageH
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_19202
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              275
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              295
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r109
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              295
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r112
               ,
               id_or_opcode
                %r113
               ,
               id_or_opcode
                %r114
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r111
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r114
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r116
             ,
             opr_register_or_constant
              id_or_opcode
               %r115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r118
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r116
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r119
             ,
             opr_register_or_constant
              id_or_opcode
               %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r112
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r121
             ,
             opr_register_or_constant
              id_or_opcode
               %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r122
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r123
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r121
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r124
             ,
             opr_register_or_constant
              id_or_opcode
               %r123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r113
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r126
             ,
             opr_register_or_constant
              id_or_opcode
               %r125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r127
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r128
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r126
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r129
             ,
             opr_register_or_constant
              id_or_opcode
               %r128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                id_or_opcode
                 %r124
              ,
              opr
               opr_aux
                id_or_opcode
                 %r129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r131
              ,
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                id_or_opcode
                 %r130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r131
         ;
       statement
        label_decl
         $Lt_1_19202
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r132
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_12034
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xOff0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xOff1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              303
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yOff0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f17
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f18
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f17
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f25
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yOff1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              306
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r133
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r134
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r133
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_20482
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              382
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              384
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f31
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              386
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              387
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              388
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              389
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              390
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f37
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f37
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f45
              ,
              opr_register_or_constant
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f43
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f41
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f50
              ,
              opr_register_or_constant
               id_or_opcode
                %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f53
              ,
              opr_register_or_constant
               id_or_opcode
                %f54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f57
              ,
              opr_register_or_constant
               id_or_opcode
                %f44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              391
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f70
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f68
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f78
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f75
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f78
              ,
              opr_register_or_constant
               id_or_opcode
                %f79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f82
              ,
              opr_register_or_constant
               id_or_opcode
                %f69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_1_20226
         ;
       statement
        label_decl
         $Lt_1_20482
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              394
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                id_or_opcode
                 %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              395
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              396
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              397
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              405
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_1_20226
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r135
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r135
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r135
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_21250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f58
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f91
              ,
              opr_register_or_constant
               id_or_opcode
                %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f93
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f94
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f95
              ,
              opr_register_or_constant
               id_or_opcode
                %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f100
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_21250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f32
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f104
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f104
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f32
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        label_decl
         $L_1_15618
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              410
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f116
              ,
              opr_register_or_constant
               id_or_opcode
                %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f119
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f120
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f122
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f118
              ,
              opr_register_or_constant
               id_or_opcode
                %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f124
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f126
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f128
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              411
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f130
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f132
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f127
              ,
              opr_register_or_constant
               id_or_opcode
                %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f132
              ,
              opr_register_or_constant
               id_or_opcode
                %f134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f135
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f136
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f138
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              412
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f141
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f31
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f146
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f144
              ,
              opr_register_or_constant
               id_or_opcode
                %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f146
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f147
              ,
              opr_register_or_constant
               id_or_opcode
                %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f149
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f148
              ,
              opr_register_or_constant
               id_or_opcode
                %f150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              415
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f151
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f152
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f157
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f156
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f159
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f163
              ,
              opr_register_or_constant
               id_or_opcode
                %f164
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f159
              ,
              opr_register_or_constant
               id_or_opcode
                %f151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f158
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f165
              ,
              opr_register_or_constant
               id_or_opcode
                %f167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f87
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f160
              ,
              opr_register_or_constant
               id_or_opcode
                %f169
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f169
              ,
              opr_register_or_constant
               id_or_opcode
                %f171
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              417
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f172
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f174
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f175
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f173
              ,
              opr_register_or_constant
               id_or_opcode
                %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f177
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f173
              ,
              opr_register_or_constant
               id_or_opcode
                %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f178
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f175
              ,
              opr_register_or_constant
               id_or_opcode
                %f177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f180
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f179
              ,
              opr_register_or_constant
               id_or_opcode
                %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f182
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f183
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f177
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f185
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f182
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f175
              ,
              opr_register_or_constant
               id_or_opcode
                %f184
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f187
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f183
              ,
              opr_register_or_constant
               id_or_opcode
                %f186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f189
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f187
              ,
              opr_register_or_constant
               id_or_opcode
                %f188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f190
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f191
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f191
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f192
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f190
              ,
              opr_register_or_constant
               id_or_opcode
                %f192
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              418
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f193
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f46000400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f193
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f195
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f196
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f197
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f194
              ,
              opr_register_or_constant
               id_or_opcode
                %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f198
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f195
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f194
              ,
              opr_register_or_constant
               id_or_opcode
                %f197
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f199
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f196
              ,
              opr_register_or_constant
               id_or_opcode
                %f198
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f170
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f200
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f201
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f200
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f202
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f203
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f204
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f198
              ,
              opr_register_or_constant
               id_or_opcode
                %f202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f205
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f206
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f207
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f196
              ,
              opr_register_or_constant
               id_or_opcode
                %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f208
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f209
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f204
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f210
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f208
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f211
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f212
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f213
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f212
              ,
              opr_register_or_constant
               id_or_opcode
                %f199
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f211
              ,
              opr_register_or_constant
               id_or_opcode
                %f213
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              419
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f214
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f215
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f216
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f217
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f218
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f212
              ,
              opr_register_or_constant
               id_or_opcode
                %f217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f219
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f216
              ,
              opr_register_or_constant
               id_or_opcode
                %f218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f220
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f85
              ,
              opr_register_or_constant
               id_or_opcode
                %f219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f221
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f60
              ,
              opr_register_or_constant
               id_or_opcode
                %f220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f223
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f222
              ,
              opr_register_or_constant
               id_or_opcode
                %f214
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f224
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f221
              ,
              opr_register_or_constant
               id_or_opcode
                %f223
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r136
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r136
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_21250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f226
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f225
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f226
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_1_15618
         ;
       statement
        label_decl
         $Lt_1_21250
         :
       statement
        label_decl
         $L_1_15874
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              306
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r136
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r139
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              409
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r135
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              306
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r135
              ,
              opr_register_or_constant
               id_or_opcode
                %r136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r142
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %p16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r142
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_20994
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              313
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r144
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r144
              ,
              opr_register_or_constant
               id_or_opcode
                %r142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r146
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              314
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r149
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                id_or_opcode
                 %r150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              315
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r152
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                id_or_opcode
                 %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_1_20738
         ;
       statement
        label_decl
         $Lt_1_20994
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              319
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_1_20738
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r155
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r159
              ,
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r159
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r161
              ,
              opr
               opr_aux
                id_or_opcode
                 %r160
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r148
              ,
              opr_register_or_constant
               id_or_opcode
                %r162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r164
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               id_or_opcode
                %r166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r168
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r165
               ,
               id_or_opcode
                %r169
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r154
              ,
              opr_register_or_constant
               id_or_opcode
                %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r172
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_1_12034
         ;
       statement
        label_decl
         $Lt_1_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              332
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z18MandelbrotDS1_sm11P6uchar4iiifffffffS_iiiib
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                86
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                116
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                32
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279346_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279347_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279347_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              41
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_2_16386
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_24322
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              50
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279346_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              51
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              52
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_2_24322
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              55
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              58
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279346_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_16386
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f5
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f7
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r36
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_25602
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              151
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              153
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              155
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              156
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_2_25346
         ;
       statement
        label_decl
         $Lt_2_25602
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              160
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              161
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_2_25346
         :
       statement
        label_decl
         $Lt_2_17666
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              329
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_25858
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_25858
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              172
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              173
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              174
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_26370
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_26370
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              180
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_26882
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_26882
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              189
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_27394
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_27394
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              198
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_27906
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_27906
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              204
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              205
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              206
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_28418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_28418
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              214
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_28930
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_28930
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              222
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_29442
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_29442
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              228
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              229
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              230
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_29954
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_29954
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              237
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              238
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_30466
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_30466
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              244
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f66
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_30978
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_30978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              253
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f69
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_31490
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_31490
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              260
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f73
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              261
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              262
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f76
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_32002
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_32002
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f79
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              270
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p20
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_32514
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_32514
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              276
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              277
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              278
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_33026
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_33026
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              285
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              286
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f92
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_33538
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_33538
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              294
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_34050
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_34050
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              300
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              301
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f99
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_34562
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_34562
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              308
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              310
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f106
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_35074
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $Lt_2_35074
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              317
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r35
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p26
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_2_24066
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p27
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_2_23810
         ;
       statement
        label_decl
         $L_2_24066
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         ;
       statement
        label_decl
         $L_2_23810
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              328
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_2_25346
         ;
       statement
        label_decl
         $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_208_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              70
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r38
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              70
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %p28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r43
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p29
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_35842
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              78
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r45
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r47
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              79
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r50
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              80
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r53
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_2_35586
         ;
       statement
        label_decl
         $Lt_2_35842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_2_35586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              58
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r59
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p30
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_36354
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v4
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r49
               ,
               id_or_opcode
                %r52
               ,
               id_or_opcode
                %r55
               ,
               id_or_opcode
                %r63
               }
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_2_16386
         ;
       statement
        label_decl
         $Lt_2_36354
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              95
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r67
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r70
               ,
               id_or_opcode
                %r71
               ,
               id_or_opcode
                %r72
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r49
              ,
              opr_register_or_constant
               id_or_opcode
                %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r75
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              96
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r52
              ,
              opr_register_or_constant
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r76
               ,
               id_or_opcode
                %r80
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              97
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r83
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_2_16386
         ;
       statement
        label_decl
         $Lt_2_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z16Mandelbrot0_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                86
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f64
            variable_declarator
             id_or_opcode
              %fd
             parameterized_register_spec
              <
              integer
               base_10_integer
                116
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                32
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279346_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279347_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279347_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              41
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_3_16386
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_24322
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              50
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279346_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              51
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              52
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_3_24322
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              55
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              58
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279346_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279347_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_16386
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd4
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd3
              ,
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd7
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd6
              ,
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r36
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_25602
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              151
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              153
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd10
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd11
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              155
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd7
              ,
              opr_register_or_constant
               id_or_opcode
                %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              156
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd4
              ,
              opr_register_or_constant
               id_or_opcode
                %fd4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_25346
         ;
       statement
        label_decl
         $Lt_3_25602
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              160
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd8
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              161
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        label_decl
         $Lt_3_25346
         :
       statement
        label_decl
         $Lt_3_17666
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              329
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_25858
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_25858
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              172
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              173
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd18
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              174
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_26370
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_26370
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              180
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_26882
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_26882
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              189
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_27394
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_27394
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd34
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              198
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_27906
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_27906
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              204
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd38
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              205
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd39
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              206
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_28418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_28418
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd43
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              214
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_28930
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_28930
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              222
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_29442
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_29442
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              228
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              229
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              230
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_29954
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_29954
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd58
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              237
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              238
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_30466
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_30466
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              244
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd66
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_30978
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_30978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd68
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              253
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd69
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_31490
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_31490
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              260
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd73
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              261
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              262
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd76
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_32002
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_32002
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd79
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              270
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p20
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_32514
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_32514
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              276
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              277
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd84
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              278
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_33026
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_33026
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd88
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              285
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd89
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              286
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd92
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_33538
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_33538
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              294
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_34050
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_34050
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              300
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              301
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd99
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_34562
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_34562
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              308
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd103
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              310
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd106
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_35074
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $Lt_3_35074
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd108
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              317
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd109
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r35
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p26
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_3_24066
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p27
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_3_23810
         ;
       statement
        label_decl
         $L_3_24066
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         ;
       statement
        label_decl
         $L_3_23810
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              328
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_25346
         ;
       statement
        label_decl
         $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_209_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              70
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r38
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              70
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %p28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r43
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p29
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_35842
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              78
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r45
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r47
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              79
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r50
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              80
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r53
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               id_or_opcode
                %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_35586
         ;
       statement
        label_decl
         $Lt_3_35842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_3_35586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              58
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r59
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p30
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_36354
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v4
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r49
               ,
               id_or_opcode
                %r52
               ,
               id_or_opcode
                %r55
               ,
               id_or_opcode
                %r63
               }
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_16386
         ;
       statement
        label_decl
         $Lt_3_36354
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              84
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              95
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r67
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r70
               ,
               id_or_opcode
                %r71
               ,
               id_or_opcode
                %r72
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r49
              ,
              opr_register_or_constant
               id_or_opcode
                %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r75
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              96
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r52
              ,
              opr_register_or_constant
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r76
               ,
               id_or_opcode
                %r80
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              97
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               id_or_opcode
                %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r55
              ,
              opr_register_or_constant
               id_or_opcode
                %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               id_or_opcode
                %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r83
              ,
              opr_register_or_constant
               id_or_opcode
                %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r60
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_3_16386
         ;
       statement
        label_decl
         $Lt_3_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z16Mandelbrot0_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                175
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                116
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                36
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279487_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279488_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279488_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_4_22530
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_31490
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279487_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              192
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              193
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_4_31490
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279487_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_22530
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r39
               ,
               id_or_opcode
                %r40
               ,
               id_or_opcode
                %r41
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_32770
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r43
               ,
               id_or_opcode
                %r44
               ,
               id_or_opcode
                %r45
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant
              id_or_opcode
               %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r47
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant
              id_or_opcode
               %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant
              id_or_opcode
               %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant
              id_or_opcode
               %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant
              id_or_opcode
               %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant
              id_or_opcode
               %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_32514
         ;
       statement
        label_decl
         $Lt_4_32770
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_4_32514
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_33026
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r64
               ,
               id_or_opcode
                %r65
               ,
               id_or_opcode
                %r66
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              215
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r66
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant
              id_or_opcode
               %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r71
             ,
             opr_register_or_constant
              id_or_opcode
               %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r64
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant
              id_or_opcode
               %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r75
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r73
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant
              id_or_opcode
               %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r65
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant
              id_or_opcode
               %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r80
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r78
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant
              id_or_opcode
               %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r83
         ;
       statement
        label_decl
         $Lt_4_33026
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_33538
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r86
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r88
               ,
               id_or_opcode
                %r89
               ,
               id_or_opcode
                %r90
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r87
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r90
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant
              id_or_opcode
               %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r88
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r97
             ,
             opr_register_or_constant
              id_or_opcode
               %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r100
             ,
             opr_register_or_constant
              id_or_opcode
               %r99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r89
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant
              id_or_opcode
               %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r104
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r105
             ,
             opr_register_or_constant
              id_or_opcode
               %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        label_decl
         $Lt_4_33538
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_34050
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              219
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r109
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              219
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r112
               ,
               id_or_opcode
                %r113
               ,
               id_or_opcode
                %r114
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r111
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r114
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r116
             ,
             opr_register_or_constant
              id_or_opcode
               %r115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r118
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r116
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r119
             ,
             opr_register_or_constant
              id_or_opcode
               %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r112
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r121
             ,
             opr_register_or_constant
              id_or_opcode
               %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r122
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r123
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r121
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r124
             ,
             opr_register_or_constant
              id_or_opcode
               %r123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r113
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r126
             ,
             opr_register_or_constant
              id_or_opcode
               %r125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r127
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r128
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r126
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r129
             ,
             opr_register_or_constant
              id_or_opcode
               %r128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                id_or_opcode
                 %r124
              ,
              opr
               opr_aux
                id_or_opcode
                 %r129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r131
              ,
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                id_or_opcode
                 %r130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r131
         ;
       statement
        label_decl
         $Lt_4_34050
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r132
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_22530
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r133
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r134
              ,
              opr
               opr_aux
                id_or_opcode
                 %r133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f5
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .f32
            i_mad_opr
             opr_register
              id_or_opcode
               %f7
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r135
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r136
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r135
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_35330
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              151
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              153
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              155
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              156
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f5
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_35074
         ;
       statement
        label_decl
         $Lt_4_35330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              160
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              161
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_4_35074
         :
       statement
        label_decl
         $Lt_4_25090
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              329
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_35586
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_35586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              172
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              173
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              174
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_36098
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_36098
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              180
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_36610
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_36610
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              189
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_37122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_37122
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              198
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_37634
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_37634
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              204
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              205
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              206
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_38146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_38146
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              214
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_38658
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_38658
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              222
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_39170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_39170
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              228
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              229
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              230
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p20
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_39682
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_39682
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              237
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              238
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_40194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_40194
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              244
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f66
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_40706
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_40706
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              253
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f69
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_41218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_41218
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              260
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f73
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              261
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              262
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f76
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_41730
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_41730
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f79
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              270
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_42242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_42242
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              276
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              277
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              278
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p26
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_42754
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_42754
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              285
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              286
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f92
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p27
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_43266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_43266
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              294
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p28
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_43778
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_43778
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              300
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              301
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f99
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p29
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_44290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_44290
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              308
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              310
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f106
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p30
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_44802
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $Lt_4_44802
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              317
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f109
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r134
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p31
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_4_31234
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p32
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_4_30978
         ;
       statement
        label_decl
         $L_4_31234
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                id_or_opcode
                 %r134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         ;
       statement
        label_decl
         $L_4_30978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              328
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_35074
         ;
       statement
        label_decl
         $LDWendi__Z14CalcMandelbrotIfEiT_S0_S0_S0_ib_210_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              226
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p33
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r137
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r139
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r133
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              226
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r133
              ,
              opr_register_or_constant
               id_or_opcode
                %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r142
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %p33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r142
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p34
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_45570
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              233
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r144
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r144
              ,
              opr_register_or_constant
               id_or_opcode
                %r142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r146
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              234
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r149
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                id_or_opcode
                 %r150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              235
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r152
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                id_or_opcode
                 %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_45314
         ;
       statement
        label_decl
         $Lt_4_45570
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              239
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_4_45314
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r155
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r159
              ,
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r159
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r161
              ,
              opr
               opr_aux
                id_or_opcode
                 %r160
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r148
              ,
              opr_register_or_constant
               id_or_opcode
                %r162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r164
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               id_or_opcode
                %r166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r168
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r165
               ,
               id_or_opcode
                %r169
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              247
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r154
              ,
              opr_register_or_constant
               id_or_opcode
                %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r172
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_4_22530
         ;
       statement
        label_decl
         $Lt_4_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z16Mandelbrot1_sm11IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .f64
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
       ,
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            4
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s8
        __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %rv1
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                175
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f64
            variable_declarator
             id_or_opcode
              %fd
             parameterized_register_spec
              <
              integer
               base_10_integer
                116
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                36
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279487_41_blockIndex
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279488_41_blockX
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              __cuda_local_var_279488_49_blockY
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_numBlocks
             ]
         ;
       statement
        label_decl
         $Lt_5_22530
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_31490
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              191
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 blockCounter
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_atom
            atom
            i_atom_type
             .global
             .add
             .u32
            i_atom_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279487_41_blockIndex
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              192
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_gridWidth
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rem
            rem
            i_rem_type
             .u32
            i_rem_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_41_blockX
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              193
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .u32
            i_div_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_49_blockY
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r16
         ;
       statement
        label_decl
         $Lt_5_31490
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279487_41_blockIndex
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_41_blockX
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               id_or_opcode
                %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_279488_49_blockY
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .y
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r23
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant
              id_or_opcode
               %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_22530
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               id_or_opcode
                %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r39
               ,
               id_or_opcode
                %r40
               ,
               id_or_opcode
                %r41
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_32770
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r43
               ,
               id_or_opcode
                %r44
               ,
               id_or_opcode
                %r45
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             -
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant
              id_or_opcode
               %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r47
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant
              id_or_opcode
               %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r43
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant
              id_or_opcode
               %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant
              id_or_opcode
               %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant
              id_or_opcode
               %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r60
             ,
             opr_register_or_constant
              id_or_opcode
               %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_5_32514
         ;
       statement
        label_decl
         $Lt_5_32770
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_5_32514
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_33026
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r64
               ,
               id_or_opcode
                %r65
               ,
               id_or_opcode
                %r66
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              215
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r66
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant
              id_or_opcode
               %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r70
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r71
             ,
             opr_register_or_constant
              id_or_opcode
               %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r64
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant
              id_or_opcode
               %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r75
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r73
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant
              id_or_opcode
               %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r65
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant
              id_or_opcode
               %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r80
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r78
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant
              id_or_opcode
               %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r83
         ;
       statement
        label_decl
         $Lt_5_33026
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_33538
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r86
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r88
               ,
               id_or_opcode
                %r89
               ,
               id_or_opcode
                %r90
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r87
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r90
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant
              id_or_opcode
               %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r88
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r97
             ,
             opr_register_or_constant
              id_or_opcode
               %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r99
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r100
             ,
             opr_register_or_constant
              id_or_opcode
               %r99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r89
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant
              id_or_opcode
               %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r103
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r104
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r105
             ,
             opr_register_or_constant
              id_or_opcode
               %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        label_decl
         $Lt_5_33538
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageH
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              217
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_34050
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              199
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_imageW
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              219
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               id_or_opcode
                %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r109
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              208
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_dst
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              219
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               id_or_opcode
                %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .v4
             .u8
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r112
               ,
               id_or_opcode
                %r113
               ,
               id_or_opcode
                %r114
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r111
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r114
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r116
             ,
             opr_register_or_constant
              id_or_opcode
               %r115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r118
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r116
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r119
             ,
             opr_register_or_constant
              id_or_opcode
               %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r112
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r121
             ,
             opr_register_or_constant
              id_or_opcode
               %r120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r122
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r123
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r121
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r124
             ,
             opr_register_or_constant
              id_or_opcode
               %r123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r113
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .s32
            i_abs_opr
             opr_register
              id_or_opcode
               %r126
             ,
             opr_register_or_constant
              id_or_opcode
               %r125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r127
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .gt
              .u32
              .s32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r128
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r126
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r129
             ,
             opr_register_or_constant
              id_or_opcode
               %r128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                id_or_opcode
                 %r124
              ,
              opr
               opr_aux
                id_or_opcode
                 %r129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r131
              ,
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                id_or_opcode
                 %r130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r131
         ;
       statement
        label_decl
         $Lt_5_34050
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r132
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r62
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_22530
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r133
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r134
              ,
              opr
               opr_aux
                id_or_opcode
                 %r133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_scale
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd4
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd3
              ,
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yOff
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f64
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mad
            mad
            i_mad_type
             .rn
             .f64
            i_mad_opr
             opr_register
              id_or_opcode
               %fd7
             ,
             opr_register_or_constant3
              opr_register_or_constant
               id_or_opcode
                %fd6
              ,
              opr_register_or_constant
               id_or_opcode
                %fd1
              ,
              opr_register_or_constant
               id_or_opcode
                %fd5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r135
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_isJ
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r136
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r135
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_35330
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              151
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_xJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              152
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f64
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %fd9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_yJP
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              153
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd10
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              154
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd11
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              155
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd7
              ,
              opr_register_or_constant
               id_or_opcode
                %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              156
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd4
              ,
              opr_register_or_constant
               id_or_opcode
                %fd4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_5_35074
         ;
       statement
        label_decl
         $Lt_5_35330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              160
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd8
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              161
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd9
              ,
              opr
               opr_aux
                id_or_opcode
                 %fd7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              165
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d0000000000000000
         ;
       statement
        label_decl
         $Lt_5_35074
         :
       statement
        label_decl
         $Lt_5_25090
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              329
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_35586
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_35586
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              172
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              173
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd13
              ,
              opr_register_or_constant
               id_or_opcode
                %fd12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd18
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              174
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_36098
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_36098
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              180
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              181
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd24
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              182
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_36610
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_36610
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              188
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              189
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              190
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_37122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_37122
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              196
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              197
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd34
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              198
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd36
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_37634
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_37634
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              204
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd38
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              205
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd39
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              206
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd42
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd41
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_38146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_38146
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd43
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              213
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              214
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_38658
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_38658
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              220
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              221
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              222
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd51
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_39170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_39170
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              228
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              229
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              230
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd56
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p20
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_39682
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_39682
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd58
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              237
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              238
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd61
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_40194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_40194
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              244
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd64
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd67
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd66
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_40706
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_40706
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd68
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              253
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd69
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_41218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_41218
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              260
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd73
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              261
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              262
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd77
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd76
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_41730
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_41730
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd79
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              270
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd81
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_42242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_42242
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              276
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd83
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              277
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd84
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              278
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p26
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_42754
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_42754
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              284
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd88
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              285
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd89
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              286
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd92
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p27
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_43266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_43266
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              294
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd96
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p28
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_43778
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_43778
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              300
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              301
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd99
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p29
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd101
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p29
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_44290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_44290
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              308
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd103
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              310
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd107
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p30
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd106
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p30
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_44802
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $Lt_5_44802
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd108
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              317
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd109
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r134
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p31
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r134
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p31
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_5_31234
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f64
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %fd112
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0d4010000000000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f64
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p32
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd111
               ,
               opr
                opr_aux
                 id_or_opcode
                  %fd112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p32
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $L_5_30978
         ;
       statement
        label_decl
         $L_5_31234
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                id_or_opcode
                 %r134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         ;
       statement
        label_decl
         $L_5_30978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd16
              ,
              opr_register_or_constant
               id_or_opcode
                %fd16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd9
              ,
              opr_register_or_constant
               id_or_opcode
                %fd113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f64
            i_sub_opr
             opr_register
              id_or_opcode
               %fd114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd20
              ,
              opr_register_or_constant
               id_or_opcode
                %fd110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f64
            i_add_opr
             opr_register
              id_or_opcode
               %fd11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd8
              ,
              opr_register_or_constant
               id_or_opcode
                %fd114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd10
              ,
              opr_register_or_constant
               id_or_opcode
                %fd10
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              328
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f64
            i_mul_opr
             opr_register
              id_or_opcode
               %fd13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %fd11
              ,
              opr_register_or_constant
               id_or_opcode
                %fd11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_5_35074
         ;
       statement
        label_decl
         $LDWendi__Z14CalcMandelbrotIdEiT_S0_S0_S0_ib_211_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              226
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p33
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r137
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r139
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              16
            integer
             base_10_integer
              146
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r133
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_crunch
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              226
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .s32
            i_sub_opr
             opr_register
              id_or_opcode
               %r140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r133
              ,
              opr_register_or_constant
               id_or_opcode
                %r137
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .s32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r142
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %p33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r142
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p34
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_5_45570
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              233
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r144
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_animationFrame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r144
              ,
              opr_register_or_constant
               id_or_opcode
                %r142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r146
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r147
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              234
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r149
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                id_or_opcode
                 %r150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              235
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u8
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r152
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_colors
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r145
              ,
              opr_register_or_constant
               id_or_opcode
                %r152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u8
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                id_or_opcode
                 %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_5_45314
         ;
       statement
        label_decl
         $Lt_5_45570
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              239
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r154
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_5_45314
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              245
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r155
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib_frame
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r158
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r159
              ,
              opr
               opr_aux
                id_or_opcode
                 %r157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r159
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r161
              ,
              opr
               opr_aux
                id_or_opcode
                 %r160
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r148
              ,
              opr_register_or_constant
               id_or_opcode
                %r162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r164
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              246
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               id_or_opcode
                %r166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r168
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r165
               ,
               id_or_opcode
                %r169
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              247
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r154
              ,
              opr_register_or_constant
               id_or_opcode
                %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               id_or_opcode
                %r171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .s32
            i_div_opr
             opr_register
              id_or_opcode
               %r173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r172
              ,
              opr_register_or_constant
               id_or_opcode
                %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_5_22530
         ;
       statement
        label_decl
         $Lt_5_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              252
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z16Mandelbrot1_sm11IdEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
         :
       }
 <EOF>
