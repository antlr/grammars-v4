	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with C:\CUDA\bin/../open64/lib//be.exe
	// nvopencc 3.1 built on 2010-06-08

	//-----------------------------------------------------------
	// Compiling simplePitchLinearTexture.compute_10.cpp3.i (C:/Users/Ken/AppData/Local/Temp/ccBI#.a03324)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"simplePitchLinearTexture.compute_10.cudafe2.gpu"
	.file	2	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	3	"C:\CUDA\include\crt/device_runtime.h"
	.file	4	"C:\CUDA\include\host_defines.h"
	.file	5	"C:\CUDA\include\builtin_types.h"
	.file	6	"c:\cuda\include\device_types.h"
	.file	7	"c:\cuda\include\driver_types.h"
	.file	8	"c:\cuda\include\surface_types.h"
	.file	9	"c:\cuda\include\texture_types.h"
	.file	10	"c:\cuda\include\vector_types.h"
	.file	11	"c:\cuda\include\builtin_types.h"
	.file	12	"c:\cuda\include\host_defines.h"
	.file	13	"C:\CUDA\include\device_launch_parameters.h"
	.file	14	"c:\cuda\include\crt\storage_class.h"
	.file	15	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
	.file	16	"c:/ProgramData/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/src/simplePitchLinearTexture/simplePitchLinearTexture.cu"
	.file	17	"C:\CUDA\include\common_functions.h"
	.file	18	"c:\cuda\include\math_functions.h"
	.file	19	"c:\cuda\include\math_constants.h"
	.file	20	"c:\cuda\include\device_functions.h"
	.file	21	"c:\cuda\include\sm_11_atomic_functions.h"
	.file	22	"c:\cuda\include\sm_12_atomic_functions.h"
	.file	23	"c:\cuda\include\sm_13_double_functions.h"
	.file	24	"c:\cuda\include\sm_20_atomic_functions.h"
	.file	25	"c:\cuda\include\sm_20_intrinsics.h"
	.file	26	"c:\cuda\include\surface_functions.h"
	.file	27	"c:\cuda\include\texture_fetch_functions.h"
	.file	28	"c:\cuda\include\math_functions_dbl_ptx1.h"

	.tex .u32 texRefPL;
	.tex .u32 texRefArray;

	.entry _Z16shiftPitchLinearPfiiiii (
		.param .u32 __cudaparm__Z16shiftPitchLinearPfiiiii_odata,
		.param .s32 __cudaparm__Z16shiftPitchLinearPfiiiii_pitch,
		.param .s32 __cudaparm__Z16shiftPitchLinearPfiiiii_width,
		.param .s32 __cudaparm__Z16shiftPitchLinearPfiiiii_height,
		.param .s32 __cudaparm__Z16shiftPitchLinearPfiiiii_shiftX,
		.param .s32 __cudaparm__Z16shiftPitchLinearPfiiiii_shiftY)
	{
	.reg .u16 %rh<6>;
	.reg .u32 %r<20>;
	.reg .f32 %f<15>;
	.loc	16	49	0
$LDWbegin__Z16shiftPitchLinearPfiiiii:
	.loc	16	54	0
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	cvt.u32.u16 	%r3, %tid.x;
	add.u32 	%r4, %r3, %r1;
	cvt.u32.u16 	%r5, %tid.y;
	add.u32 	%r6, %r5, %r2;
	ld.param.s32 	%r7, [__cudaparm__Z16shiftPitchLinearPfiiiii_shiftX];
	add.s32 	%r8, %r7, %r4;
	cvt.rn.f32.s32 	%f1, %r8;
	ld.param.s32 	%r9, [__cudaparm__Z16shiftPitchLinearPfiiiii_width];
	cvt.rn.f32.s32 	%f2, %r9;
	div.full.f32 	%f3, %f1, %f2;
	ld.param.s32 	%r10, [__cudaparm__Z16shiftPitchLinearPfiiiii_shiftY];
	add.s32 	%r11, %r10, %r6;
	cvt.rn.f32.s32 	%f4, %r11;
	ld.param.s32 	%r12, [__cudaparm__Z16shiftPitchLinearPfiiiii_height];
	cvt.rn.f32.s32 	%f5, %r12;
	div.full.f32 	%f6, %f4, %f5;
	mov.f32 	%f7, 0f00000000;     	// 0
	mov.f32 	%f8, 0f00000000;     	// 0
	tex.2d.v4.f32.f32 {%f9,%f10,%f11,%f12},[texRefPL,{%f3,%f6,%f7,%f8}];
	mov.f32 	%f13, %f9;
	ld.param.u32 	%r13, [__cudaparm__Z16shiftPitchLinearPfiiiii_odata];
	ld.param.s32 	%r14, [__cudaparm__Z16shiftPitchLinearPfiiiii_pitch];
	mul.lo.s32 	%r15, %r14, %r6;
	add.s32 	%r16, %r4, %r15;
	mul.lo.u32 	%r17, %r16, 4;
	add.u32 	%r18, %r13, %r17;
	st.global.f32 	[%r18+0], %f13;
	.loc	16	57	0
	exit;
$LDWend__Z16shiftPitchLinearPfiiiii:
	} // _Z16shiftPitchLinearPfiiiii

	.entry _Z10shiftArrayPfiiiii (
		.param .u32 __cudaparm__Z10shiftArrayPfiiiii_odata,
		.param .s32 __cudaparm__Z10shiftArrayPfiiiii_pitch,
		.param .s32 __cudaparm__Z10shiftArrayPfiiiii_width,
		.param .s32 __cudaparm__Z10shiftArrayPfiiiii_height,
		.param .s32 __cudaparm__Z10shiftArrayPfiiiii_shiftX,
		.param .s32 __cudaparm__Z10shiftArrayPfiiiii_shiftY)
	{
	.reg .u16 %rh<6>;
	.reg .u32 %r<20>;
	.reg .f32 %f<15>;
	.loc	16	60	0
$LDWbegin__Z10shiftArrayPfiiiii:
	.loc	16	65	0
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	cvt.u32.u16 	%r3, %tid.x;
	add.u32 	%r4, %r3, %r1;
	cvt.u32.u16 	%r5, %tid.y;
	add.u32 	%r6, %r5, %r2;
	ld.param.s32 	%r7, [__cudaparm__Z10shiftArrayPfiiiii_shiftX];
	add.s32 	%r8, %r7, %r4;
	cvt.rn.f32.s32 	%f1, %r8;
	ld.param.s32 	%r9, [__cudaparm__Z10shiftArrayPfiiiii_width];
	cvt.rn.f32.s32 	%f2, %r9;
	div.full.f32 	%f3, %f1, %f2;
	ld.param.s32 	%r10, [__cudaparm__Z10shiftArrayPfiiiii_shiftY];
	add.s32 	%r11, %r10, %r6;
	cvt.rn.f32.s32 	%f4, %r11;
	ld.param.s32 	%r12, [__cudaparm__Z10shiftArrayPfiiiii_height];
	cvt.rn.f32.s32 	%f5, %r12;
	div.full.f32 	%f6, %f4, %f5;
	mov.f32 	%f7, 0f00000000;     	// 0
	mov.f32 	%f8, 0f00000000;     	// 0
	tex.2d.v4.f32.f32 {%f9,%f10,%f11,%f12},[texRefArray,{%f3,%f6,%f7,%f8}];
	mov.f32 	%f13, %f9;
	ld.param.u32 	%r13, [__cudaparm__Z10shiftArrayPfiiiii_odata];
	ld.param.s32 	%r14, [__cudaparm__Z10shiftArrayPfiiiii_pitch];
	mul.lo.s32 	%r15, %r14, %r6;
	add.s32 	%r16, %r4, %r15;
	mul.lo.u32 	%r17, %r16, 4;
	add.u32 	%r18, %r13, %r17;
	st.global.f32 	[%r18+0], %f13;
	.loc	16	68	0
	exit;
$LDWend__Z10shiftArrayPfiiiii:
	} // _Z10shiftArrayPfiiiii

