prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z11getLocation3Rayi
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            8
          ]
      )
      func_name
       _Z11getLocation3Rayi
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z11getLocation3Rayi
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            32
          ]
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf2__Z11getLocation3Rayi
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaretf__Z8getAngle3Ray6float2f
      )
      func_name
       _Z8getAngle3Ray6float2f
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z8getAngle3Ray6float2f
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            32
          ]
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf2__Z8getAngle3Ray6float2f
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            8
          ]
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparmf3__Z8getAngle3Ray6float2f
      )
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "lineOfSight.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "c:/ProgramData/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/src/lineOfSight/lineOfSight.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:\ProgramData\NVIDIA Corporation\NVIDIA GPU Computing SDK\C\common\inc\cutil_math.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      global_space_specifier
       global
        .global
      type
       opaque_type
        opaque_type_aux
         .texref
      variable_declarator
       id_or_opcode
        g_HeightFieldTex
   ;
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z11getLocation3Rayi
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            8
          ]
      )
      func_name
       _Z11getLocation3Rayi
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z11getLocation3Rayi
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            32
          ]
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf2__Z11getLocation3Rayi
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                16
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              326
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z11getLocation3Rayi
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 28
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z11getLocation3Rayi
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              328
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f11
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z11getLocation3Rayi
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z11getLocation3Rayi
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaretf__Z8getAngle3Ray6float2f
      )
      func_name
       _Z8getAngle3Ray6float2f
      (
      func_param_list
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf1__Z8getAngle3Ray6float2f
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            32
          ]
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf2__Z8getAngle3Ray6float2f
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            8
          ]
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .f32
        __cudaparmf3__Z8getAngle3Ray6float2f
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                6
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                46
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              338
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z8getAngle3Ray6float2f
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z8getAngle3Ray6float2f
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z8getAngle3Ray6float2f
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z8getAngle3Ray6float2f
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z8getAngle3Ray6float2f
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z8getAngle3Ray6float2f
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf3__Z8getAngle3Ray6float2f
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1205
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f10
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f14
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sqrt
            sqrt
            i_sqrt_type
             .rn
             .f32
            i_sqrt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                id_or_opcode
                 %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f32
            i_abs_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant
              id_or_opcode
               %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f23
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fbf52c7ea
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fc0b59883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                id_or_opcode
                 %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fc0d21907
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f28
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1209
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41355dc0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f24
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41e6bd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1211
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f419d92c8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1877
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3fc90fdb
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f7f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_2562
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1883
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   2147483648
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
         ;
       statement
        label_decl
         $Lt_1_2562
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              340
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z8getAngle3Ray6float2f
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z8getAngle3Ray6float2f
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z20computeAngles_kernel3RayPf
      (
      entry_param_list
       entry_param
        entry_space
         .param
        align
         .align
         byte_count
          base_10_integer
           8
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            32
          ]
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z20computeAngles_kernel3RayPf_angles
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                16
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                52
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                5
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              264
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z20computeAngles_kernel3RayPf
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_3330
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              268
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 28
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_tex
            tex
            i_tex_type
             .2d
             .v4
             .f32
             .f32
            i_tex_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f14
               ,
               id_or_opcode
                %f15
               ,
               id_or_opcode
                %f16
               ,
               id_or_opcode
                %f17
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                g_HeightFieldTex
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %f10
               ,
               id_or_opcode
                %f11
               ,
               id_or_opcode
                %f12
               ,
               id_or_opcode
                %f13
               }
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              269
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              340
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf___val_paramray
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f18
              ,
              opr_register_or_constant
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                id_or_opcode
                 %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sqrt
            sqrt
            i_sqrt_type
             .rn
             .f32
            i_sqrt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f25
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_div
            div
            i_div_type
             .rn
             .f32
            i_div_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1212
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_abs
            abs
            i_abs_type
             .f32
            i_abs_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant
              id_or_opcode
               %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fbf52c7ea
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fc0b59883
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0fc0d21907
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f34
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f31
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41355dc0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f31
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41e6bd60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f40
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f419d92c8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f46
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f30
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1877
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3fc90fdb
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f47
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .f32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f49
              ,
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                id_or_opcode
                 %f46
              ,
              opr
               opr_aux
                id_or_opcode
                 %p2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f7f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f27
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_3842
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              19
            integer
             base_10_integer
              1883
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              -
                              unary_expression
                               unary_expression_not_plus_minus
                                primary
                                 integer
                                  base_10_integer
                                   2147483648
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .b32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
         ;
       statement
        label_decl
         $Lt_2_3842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              271
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z20computeAngles_kernel3RayPf_angles
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f49
         ;
       statement
        label_decl
         $Lt_2_3330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              273
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z20computeAngles_kernel3RayPf
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z26computeVisibilities_kernelPKfS0_iPh
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_angles
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_scannedAngles
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_numAngles
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_visibilities
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                17
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                3
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              286
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z26computeVisibilities_kernelPKfS0_iPh
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %ntid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_numAngles
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_1026
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              290
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_angles
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_scannedAngles
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r11
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .ge
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant
              id_or_opcode
               %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z26computeVisibilities_kernelPKfS0_iPh_visibilities
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .u8
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r15
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        label_decl
         $Lt_3_1026
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              2
            integer
             base_10_integer
              291
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z26computeVisibilities_kernelPKfS0_iPh
         :
       }
 <EOF>
