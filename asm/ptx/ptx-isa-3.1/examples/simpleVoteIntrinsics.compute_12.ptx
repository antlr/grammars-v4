	.version 1.4
	.target sm_12, map_f64_to_f32
	// compiled with C:\CUDA\bin/../open64/lib//be.exe
	// nvopencc 3.1 built on 2010-06-08

	//-----------------------------------------------------------
	// Compiling simpleVoteIntrinsics.compute_12.cpp3.i (C:/Users/Ken/AppData/Local/Temp/ccBI#.a08024)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_12, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"simpleVoteIntrinsics.compute_12.cudafe2.gpu"
	.file	2	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	3	"C:\CUDA\include\crt/device_runtime.h"
	.file	4	"C:\CUDA\include\host_defines.h"
	.file	5	"C:\CUDA\include\builtin_types.h"
	.file	6	"c:\cuda\include\device_types.h"
	.file	7	"c:\cuda\include\driver_types.h"
	.file	8	"c:\cuda\include\surface_types.h"
	.file	9	"c:\cuda\include\texture_types.h"
	.file	10	"c:\cuda\include\vector_types.h"
	.file	11	"c:\cuda\include\builtin_types.h"
	.file	12	"c:\cuda\include\host_defines.h"
	.file	13	"C:\CUDA\include\device_launch_parameters.h"
	.file	14	"c:\cuda\include\crt\storage_class.h"
	.file	15	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
	.file	16	"c:\cuda\include\texture_fetch_functions.h"
	.file	17	"c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\simplevoteintrinsics\simpleVote_kernel.cu"
	.file	18	"C:\CUDA\include\common_functions.h"
	.file	19	"c:\cuda\include\math_functions.h"
	.file	20	"c:\cuda\include\math_constants.h"
	.file	21	"c:\cuda\include\device_functions.h"
	.file	22	"c:\cuda\include\sm_11_atomic_functions.h"
	.file	23	"c:\cuda\include\sm_12_atomic_functions.h"
	.file	24	"c:\cuda\include\sm_13_double_functions.h"
	.file	25	"c:\cuda\include\sm_20_atomic_functions.h"
	.file	26	"c:\cuda\include\sm_20_intrinsics.h"
	.file	27	"c:\cuda\include\surface_functions.h"
	.file	28	"c:\cuda\include\math_functions_dbl_ptx1.h"


	.entry _Z14VoteAnyKernel1PjS_i (
		.param .u32 __cudaparm__Z14VoteAnyKernel1PjS_i_input,
		.param .u32 __cudaparm__Z14VoteAnyKernel1PjS_i_result,
		.param .s32 __cudaparm__Z14VoteAnyKernel1PjS_i_size)
	{
	.reg .u16 %rh<3>;
	.reg .u32 %rv1;
	.reg .u32 %r<18>;
	.reg .pred %p<4>;
	.loc	17	28	0
$LDWbegin__Z14VoteAnyKernel1PjS_i:
	.loc	17	32	0
	cvt.s32.u16 	%r1, %tid.x;
	cvt.u16.u32 	%rh1, %r1;
	mul.wide.u16 	%r2, %rh1, 4;
	ld.param.u32 	%r3, [__cudaparm__Z14VoteAnyKernel1PjS_i_input];
	add.u32 	%r4, %r3, %r2;
	ld.global.u32 	%r5, [%r4+0];
	mov.u32 	%r6, 0;
	set.ne.u32.u32 	%r7, %r5, %r6;
	neg.s32 	%r8, %r7;
	mov.u32 	%r9, 0;
	setp.ne.u32 	%p1, %r8, %r9;
	vote.any.pred 	%p2, %p1;
	selp.u32 	%r10, 1, 0, %p2;
	mov.s32 	%r11, %r10;
	mov.s32 	%r12, 0;
	set.ne.u32.s32 	%r13, %r11, %r12;
	neg.s32 	%r14, %r13;
	ld.param.u32 	%r15, [__cudaparm__Z14VoteAnyKernel1PjS_i_result];
	add.u32 	%r16, %r15, %r2;
	st.global.u32 	[%r16+0], %r14;
	.loc	17	33	0
	exit;
$LDWend__Z14VoteAnyKernel1PjS_i:
	} // _Z14VoteAnyKernel1PjS_i

	.entry _Z14VoteAllKernel2PjS_i (
		.param .u32 __cudaparm__Z14VoteAllKernel2PjS_i_input,
		.param .u32 __cudaparm__Z14VoteAllKernel2PjS_i_result,
		.param .s32 __cudaparm__Z14VoteAllKernel2PjS_i_size)
	{
	.reg .u16 %rh<3>;
	.reg .u32 %rv1;
	.reg .u32 %r<18>;
	.reg .pred %p<4>;
	.loc	17	38	0
$LDWbegin__Z14VoteAllKernel2PjS_i:
	.loc	17	42	0
	cvt.s32.u16 	%r1, %tid.x;
	cvt.u16.u32 	%rh1, %r1;
	mul.wide.u16 	%r2, %rh1, 4;
	ld.param.u32 	%r3, [__cudaparm__Z14VoteAllKernel2PjS_i_input];
	add.u32 	%r4, %r3, %r2;
	ld.global.u32 	%r5, [%r4+0];
	mov.u32 	%r6, 0;
	set.ne.u32.u32 	%r7, %r5, %r6;
	neg.s32 	%r8, %r7;
	mov.u32 	%r9, 0;
	setp.ne.u32 	%p1, %r8, %r9;
	vote.all.pred 	%p2, %p1;
	selp.u32 	%r10, 1, 0, %p2;
	mov.s32 	%r11, %r10;
	mov.s32 	%r12, 0;
	set.ne.u32.s32 	%r13, %r11, %r12;
	neg.s32 	%r14, %r13;
	ld.param.u32 	%r15, [__cudaparm__Z14VoteAllKernel2PjS_i_result];
	add.u32 	%r16, %r15, %r2;
	st.global.u32 	[%r16+0], %r14;
	.loc	17	43	0
	exit;
$LDWend__Z14VoteAllKernel2PjS_i:
	} // _Z14VoteAllKernel2PjS_i

	.entry _Z14VoteAnyKernel3Pbi (
		.param .u32 __cudaparm__Z14VoteAnyKernel3Pbi_info,
		.param .s32 __cudaparm__Z14VoteAnyKernel3Pbi_warp_size)
	{
	.reg .u16 %rh<3>;
	.reg .u32 %rv1;
	.reg .u32 %r<24>;
	.reg .pred %p<8>;
	.loc	17	47	0
$LDWbegin__Z14VoteAnyKernel3Pbi:
	.loc	17	53	0
	ld.param.s32 	%r1, [__cudaparm__Z14VoteAnyKernel3Pbi_warp_size];
	mul.lo.s32 	%r2, %r1, 3;
	shr.s32 	%r3, %r2, 31;
	mov.s32 	%r4, 1;
	and.b32 	%r5, %r3, %r4;
	add.s32 	%r6, %r5, %r2;
	shr.s32 	%r7, %r6, 1;
	cvt.s32.u16 	%r8, %tid.x;
	setp.le.s32 	%p1, %r7, %r8;
	selp.s32 	%r9, 1, 0, %p1;
	mov.u32 	%r10, 0;
	setp.ne.u32 	%p2, %r9, %r10;
	vote.any.pred 	%p3, %p2;
	selp.u32 	%r11, 1, 0, %p3;
	mov.s32 	%r12, %r11;
	mul24.lo.s32 	%r13, %r8, 3;
	ld.param.u32 	%r14, [__cudaparm__Z14VoteAnyKernel3Pbi_info];
	add.u32 	%r15, %r13, %r14;
	mov.s32 	%r16, 0;
	set.ne.u32.s32 	%r17, %r12, %r16;
	neg.s32 	%r18, %r17;
	st.global.s8 	[%r15+0], %r18;
	.loc	17	56	0
	st.global.s8 	[%r15+1], %r9;
	.loc	17	58	0
	mov.u32 	%r19, 0;
	setp.ne.u32 	%p4, %r9, %r19;
	vote.all.pred 	%p5, %p4;
	selp.u32 	%r20, 1, 0, %p5;
	mov.s32 	%r21, %r20;
	mov.u32 	%r22, 0;
	setp.eq.s32 	%p6, %r21, %r22;
	@%p6 bra 	$Lt_2_1026;
	.loc	17	59	0
	mov.s16 	%rh1, 1;
	st.global.s8 	[%r15+2], %rh1;
$Lt_2_1026:
	.loc	17	61	0
	exit;
$LDWend__Z14VoteAnyKernel3Pbi:
	} // _Z14VoteAnyKernel3Pbi

