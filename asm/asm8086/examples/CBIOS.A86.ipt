prog
 line
  assemblerdirective
   title
    title
    string_
     'Customized Basic I/O System'
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     true
    equ
    expression
     multiplyingExpression
      argument
       number
        sign
         -
        1
  \n
 line
  assemblerdirective
   equ
    name
     false
    equ
    expression
     multiplyingExpression
      argument
       not
       expression
        multiplyingExpression
         argument
          name
           true
  \n
 line
  assemblerdirective
   equ
    name
     cr
    equ
    expression
     multiplyingExpression
      argument
       number
        0dh
  \n
 line
  assemblerdirective
   equ
    name
     lf
    equ
    expression
     multiplyingExpression
      argument
       number
        0ah
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     loader_bios
    equ
    expression
     multiplyingExpression
      argument
       name
        false
  \n
 line
  assemblerdirective
   equ
    name
     bdos_int
    equ
    expression
     multiplyingExpression
      argument
       number
        224
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      not
      assemblerterm
       name
        loader_bios
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   equ
    name
     bios_code
    equ
    expression
     multiplyingExpression
      argument
       number
        2500h
  \n
 line
  assemblerdirective
   equ
    name
     ccp_offset
    equ
    expression
     multiplyingExpression
      argument
       number
        0000h
  \n
 line
  assemblerdirective
   equ
    name
     bdos_ofst
    equ
    expression
     multiplyingExpression
      argument
       number
        0B06h
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      name
       loader_bios
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   equ
    name
     bios_code
    equ
    expression
     multiplyingExpression
      argument
       number
        1200h
  \n
 line
  assemblerdirective
   equ
    name
     ccp_offset
    equ
    expression
     multiplyingExpression
      argument
       number
        0003h
  \n
 line
  assemblerdirective
   equ
    name
     bdos_ofst
    equ
    expression
     multiplyingExpression
      argument
       number
        0406h
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  assemblerdirective
   cseg
    cseg
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       name
        ccpoffset
  \n
 line
  lbl
   label
    name
     ccp
   :
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       name
        bios_code
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        INIT
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        WBOOT
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONST
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONIN
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONOUT
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        LISTOUT
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        PUNCH
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        READER
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        HOME
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SELDSK
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SETTRK
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SETSEC
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SETDMA
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        READ
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        WRITE
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        LISTST
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SECTRAN
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SETDMAB
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        GETSEGT
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        GETIOBF
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        SETIOBF
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     INIT
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        cs
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ss
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        sp
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           stkbase
  \n
 line
  instruction
   opcode
    cld
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      not
      assemblerterm
       name
        loader_bios
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        IOBYTE
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        int0_offset
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           int_trap
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        int0_segment
    ,
    expression
     multiplyingExpression
      argument
       register_
        CS
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        di
    ,
    expression
     multiplyingExpression
      argument
       number
        4
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        si
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       number
        510
  \n
 line
  instruction
   rep
    rep
   opcode
    movs
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_offset
    ,
    expression
     multiplyingExpression
      argument
       name
        bdos_ofst
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      name
       loader_bios
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_offset
    ,
    expression
     multiplyingExpression
      argument
       name
        bdos_ofst
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_segment
    ,
    expression
     multiplyingExpression
      argument
       register_
        CS
  \n
 line
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           signon
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        pmsg
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        ccp
  \n\n
 line
  lbl
   label
    name
     WBOOT
   :
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        ccp
     sign
      +
     multiplyingExpression
      argument
       number
        6
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      not
      assemblerterm
       name
        loader_bios
  \n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     int_trap
   :
  \n
 line
  instruction
   opcode
    cli
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        cs
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           int_trp
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        pmsg
  \n
 line
  instruction
   opcode
    hlt
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     CONST
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     CONIN
   :
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONST
  \n
 line
  instruction
   opcode
    jz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONIN
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     CONOUT
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     LISTOUT
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     LISTST
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     PUNCH
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     READER
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     GETIOBF
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       name
        IOBYTE
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SETIOBF
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        IOBYTE
    ,
    expression
     multiplyingExpression
      argument
       register_
        cl
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     pmsg
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       [
       expression
        multiplyingExpression
         argument
          register_
           BX
       ]
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       register_
        al
  \n
 line
  instruction
   opcode
    jz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        return
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        CL
    ,
    expression
     multiplyingExpression
      argument
       register_
        AL
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CONOUT
  \n
 line
  instruction
   opcode
    inc
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        BX
  \n
 line
  instruction
   opcode
    jmps
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        pmsg
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     SELDSK
   :
  \n
 line
  assemblerdirective
   equ
    name
     ndisks
    equ
    expression
     multiplyingExpression
      argument
       number
        2
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        disk
    ,
    expression
     multiplyingExpression
      argument
       register_
        cl
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       number
        0000h
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        ndisks
  \n
 line
  instruction
   opcode
    jnb
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        return
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ch
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       number
        4
  \n
 line
  instruction
   opcode
    shl
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cl
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           dpbase
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  lbl
   label
    name
     return
   :
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     HOME
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        trk
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SETTRK
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        trk
    ,
    expression
     multiplyingExpression
      argument
       register_
        CX
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SETSEC
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sect
    ,
    expression
     multiplyingExpression
      argument
       register_
        CX
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SECTRAN
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        dx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bl
    ,
    expression
     multiplyingExpression
      argument
       [
       expression
        multiplyingExpression
         argument
          register_
           bx
       ]
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SETDMA
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        dma_adr
    ,
    expression
     multiplyingExpression
      argument
       register_
        CX
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     SETDMAB
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        dma_seg
    ,
    expression
     multiplyingExpression
      argument
       register_
        CX
  \n
 line
  instruction
   opcode
    ret
  \n
 line
  \n
 line
  lbl
   label
    name
     GETSEGT
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           seg_table
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     READ
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        50
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     WRITE
   :
  \n
 line
  assemblerdirective
   rs
    rs
    expression
     multiplyingExpression
      argument
       number
        50
  \n
 line
  instruction
   opcode
    ret
  \n\n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   equ
    name
     data_offset
    equ
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          dollar
           $
  \n\n
 line
  assemblerdirective
   dseg
    dseg
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       name
        data_offset
  \n
 line
  lbl
   label
    name
     IOBYTE
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  lbl
   label
    name
     disk
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  lbl
   label
    name
     trk
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  lbl
   label
    name
     sect
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  lbl
   label
    name
     dma_adr
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  lbl
   label
    name
     dma_seg
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      name
       loader_bios
  \n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     signon
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        string_
         'CP/M-86 Version 1.0'
     ,
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  assemblerdirective
   if_
    IF
    assemblerexpression
     assemblerterm
      not
      assemblerterm
       name
        loader_bios
  \n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     signon
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        string_
         'System Generated 00/00/00'
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        number
         0
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   endif_
    ENDIF
  \n\n
 line
  lbl
   label
    name
     int_trp
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        string_
         'Interrupt Trap Halt'
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
  \n\n
 line
  \n\n
 line
  lbl
   label
    name
     segtable
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         2
  \n
 line
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         tpa_seg
  \n
 line
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         tpa_len
  \n
 line
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         2000h
  \n
 line
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         2000h
  \n\n
 line
  assemblerdirective
   include_
    include
    name
     singles.lib
  \n\n
 line
  lbl
   label
    name
     loc_stk
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        32
  \n
 line
  assemblerdirective
   equ
    name
     stkbase
    equ
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          dollar
           $
  \n\n
 line
  assemblerdirective
   equ
    name
     lastoff
    equ
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          dollar
           $
  \n
 line
  assemblerdirective
   equ
    name
     tpa_seg
    equ
    expression
     multiplyingExpression
      argument
       (
       expression
        multiplyingExpression
         argument
          name
           lastoff
        sign
         +
        multiplyingExpression
         argument
          number
           0400h
        sign
         +
        multiplyingExpression
         argument
          number
           15
       )
      /
      argument
       number
        16
  \n
 line
  assemblerdirective
   equ
    name
     tpa_len
    equ
    expression
     multiplyingExpression
      argument
       number
        0800h
     sign
      -
     multiplyingExpression
      argument
       name
        tpa_seg
  \n
 line
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  assemblerdirective
   dseg
    dseg
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  lbl
   label
    name
     int0_offset
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     int0_segment
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  \n
 line
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        2
      *
      argument
       (
       expression
        multiplyingExpression
         argument
          name
           bdos_int
        sign
         -
        multiplyingExpression
         argument
          number
           1
       )
  \n\n
 line
  lbl
   label
    name
     bdos_offset
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     bdos_segment
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  assemblerdirective
   end
    END
  \n
 <EOF>
