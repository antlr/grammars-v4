prog
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n\n
 line
  \n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     host_sectsiz
    equ
    expression
     multiplyingExpression
      argument
       number
        1024
  \n
 line
  assemblerdirective
   equ
    name
     host_spt
    equ
    expression
     multiplyingExpression
      argument
       number
        8
  \n
 line
  assemblerdirective
   equ
    name
     host_fsn
    equ
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n\n
 line
  lbl
   label
    name
     init
   :
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        clear_flags
  \n
 line
  assemblerdirective
   .
  \n
 line
  assemblerdirective
   .
  \n
 line
  assemblerdirective
   .
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        CCP_entry
  \n\n\n
 line
  lbl
   label
    name
     seldsk
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cpm_disk
    ,
    expression
     multiplyingExpression
      argument
       register_
        cl
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dl
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    jnz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        old_disk
  \n\n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     old_disk
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bl
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_disk
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bh
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dl
    ,
    expression
     multiplyingExpression
      argument
       number
        4
  !
  instruction
   opcode
    shl
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        dl
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           dpbase
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     setdma
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        dma_offset
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    ret
  \n
 line
  lbl
   label
    name
     setdma_seg
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        dma_segment
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    ret
  \n
 line
  lbl
   label
    name
     home
   :
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wr_flag
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  !
  instruction
   opcode
    jnz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        home1
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_disk
    ,
    expression
     multiplyingExpression
      argument
       number
        sign
         -
        1
  \n
 line
  \n
 line
  lbl
   label
    name
     home1
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n\n
 line
  lbl
   label
    name
     settrk
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cpm_track
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    ret
  \n
 line
  lbl
   label
    name
     setsec
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cpm_sec
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     sectran
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       register_
        dx
  \n
 line
  instruction
   opcode
    jz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sectran_exit
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        dx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bl
    ,
    expression
     multiplyingExpression
      argument
       [
       expression
        multiplyingExpression
         argument
          register_
           BX
       ]
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bh
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  lbl
   label
    name
     sectran_exit
   :
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     read
   :
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setup
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        si
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           track_buffer
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        si
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    les
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        di
    ,
    expression
     multiplyingExpression
      argument
       name
        dma_longword
  \n
 line
  instruction
   rep
    rep
   opcode
    movsw
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
  \n
 line
  instruction
   opcode
    sub
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     write
   :
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setup
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        ds
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
    ,
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        di
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           track_buffer
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        di
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    lds
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        si
    ,
    expression
     multiplyingExpression
      argument
       name
        dma_longword
  \n
 line
  instruction
   rep
    rep
   opcode
    movsw
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       name
        host_sectsiz
  \n
 line
  instruction
   opcode
    sub
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       register_
        dx
  \n
 line
  instruction
   opcode
    div
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sec_flags
       [
       expression
        multiplyingExpression
         argument
          register_
           BX
       ]
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wr_flag
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    jne
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        return
  \n
 line
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        flush_buffer
  \n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     return
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    ret
  \n\n\n
 line
  lbl
   label
    name
     setup
   :
  \n\n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_disk
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       name
        cur_disk
  \n
 line
  instruction
   opcode
    jne
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wrong_track
  \n\n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_track
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        cur_track
  \n
 line
  instruction
   opcode
    je
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        correct_track
  \n\n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     wrong_track
   :
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        flush_buffer
  \n\n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_track
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_track
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_disk
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_disk
    ,
    expression
     multiplyingExpression
      argument
       register_
        al
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_dma
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           track_buffer
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_sec
    ,
    expression
     multiplyingExpression
      argument
       name
        host_fsn
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        track_read
  \n\n
 line
  lbl
   label
    name
     correct_track
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        cpm_sec
  \n
 line
  assemblerdirective
   if_
    if
    assemblerexpression
     (
     assemblerexpression
      assemblerterm
       name
        host_fsn
      assemblerlogical
       ne
      assemblerterm
       number
        0
     )
  \n
 line
  instruction
   opcode
    sub
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        host_fsn
  \n
 line
  assemblerdirective
   endif_
    endif
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dl
    ,
    expression
     multiplyingExpression
      argument
       number
        7
  \n
 line
  instruction
   opcode
    shl
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        dl
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       number
        64
  !
  instruction
   opcode
    cld
  \n
 line
  instruction
   opcode
    ret
  \n\n\n
 line
  lbl
   label
    name
     flush_buffer
   :
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wr_flag
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    jz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        no_flush
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       name
        host_spt
  \n
 line
  lbl
   label
    name
     next_sect
   :
  \n
 line
  instruction
   opcode
    test
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sec_flags
       [
       expression
        multiplyingExpression
         argument
          register_
           BX
       ]
    ,
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  instruction
   opcode
    jz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        not_updated
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sec_flags
       [
       expression
        multiplyingExpression
         argument
          register_
           BX
       ]
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_sec
    ,
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        host_sectsiz
  \n
 line
  instruction
   opcode
    mul
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           track_buffer
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_dma
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sector_write
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  lbl
   label
    name
     not_updated
   :
  \n
 line
  instruction
   opcode
    inc
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    loop
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        next_sect
  \n
 line
  lbl
   label
    name
     no_flush
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wr_flag
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     clear_flags
   :
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        cur_disk
    ,
    expression
     multiplyingExpression
      argument
       number
        sign
         -
        1
  \n
 line
  instruction
   opcode
    sub
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        wr_flag
    ,
    expression
     multiplyingExpression
      argument
       register_
        al
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        di
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           sec_flags
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        bx
    ,
    expression
     multiplyingExpression
      argument
       register_
        ds
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
    ,
    expression
     multiplyingExpression
      argument
       register_
        bx
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       name
        host_spt
  !
  instruction
   opcode
    cld
  \n
 line
  instruction
   rep
    rep
   opcode
    stosb
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     track_read
   :
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   opcode
    ret
  \n\n
 line
  lbl
   label
    name
     sector_write
   :
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   opcode
    ret
  \n\n\n
 line
  assemblerdirective
   dseg
    dseg
  \n\n
 line
  lbl
   label
    name
     cpm_disk
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     cpm_track
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     cpm_sec
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n
 line
  lbl
   label
    name
     dma_offset
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     dma_segment
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  assemblerdirective
   equ
    name
     dma_longword
    equ
    expression
     multiplyingExpression
      argument
       ptr
        dword
        ptr
       expression
        multiplyingExpression
         argument
          name
           dma_offset
  \n\n
 line
  lbl
   label
    name
     cur_disk
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     cur_sec
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     cur_track
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     cur_dma
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n
 line
  lbl
   label
    name
     bdos_wr_code
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     wr_flag
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n
 line
  lbl
   label
    name
     sec_flags
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       name
        host_spt
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     track_buffer
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       name
        host_sectsiz
      *
      argument
       name
        host_spt
  \n
 <EOF>
