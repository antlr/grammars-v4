prog
 line
  assemblerdirective
   title
    title
    string_
     'CP/M-86 Loader'
  \n\n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     false
    equ
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  assemblerdirective
   equ
    name
     true
    equ
    expression
     multiplyingExpression
      argument
       not
       expression
        multiplyingExpression
         argument
          name
           false
  \n\n
 line
  assemblerdirective
   equ
    name
     cr
    equ
    expression
     multiplyingExpression
      argument
       number
        0dh
  \n
 line
  assemblerdirective
   equ
    name
     lf
    equ
    expression
     multiplyingExpression
      argument
       number
        0ah
  \n\n
 line
  assemblerdirective
   equ
    name
     lbios_offset
    equ
    expression
     multiplyingExpression
      argument
       number
        1200h
  \n\n
 line
  assemblerdirective
   equ
    name
     biosoff
    equ
    expression
     multiplyingExpression
      argument
       number
        2500h
  \n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     bootdrv
    equ
    expression
     multiplyingExpression
      argument
       number
        0
  \n\n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     lbdosoff
    equ
    expression
     multiplyingExpression
      argument
       number
        406H
  \n\n
 line
  assemblerdirective
   equ
    name
     bdos_int
    equ
    expression
     multiplyingExpression
      argument
       number
        224
  \n\n
 line
  \n\n
 line
  assemblerdirective
   dseg
    dseg
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  lbl
   label
    name
     abs_zero
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        2
      *
      argument
       name
        bdosint
  \n
 line
  lbl
   label
    name
     bdos_offset
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n
 line
  lbl
   label
    name
     bdos_segment
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n
 line
  \n\n
 line
  assemblerdirective
   equ
    name
     coutf
    equ
    expression
     multiplyingExpression
      argument
       number
        2
  \n
 line
  assemblerdirective
   equ
    name
     pstrf
    equ
    expression
     multiplyingExpression
      argument
       number
        9
  \n
 line
  assemblerdirective
   equ
    name
     seldsk
    equ
    expression
     multiplyingExpression
      argument
       number
        14
  \n
 line
  assemblerdirective
   equ
    name
     openf
    equ
    expression
     multiplyingExpression
      argument
       number
        15
  \n
 line
  assemblerdirective
   equ
    name
     readsf
    equ
    expression
     multiplyingExpression
      argument
       number
        20
  \n
 line
  assemblerdirective
   equ
    name
     dmaf
    equ
    expression
     multiplyingExpression
      argument
       number
        26
  \n
 line
  assemblerdirective
   equ
    name
     dmabf
    equ
    expression
     multiplyingExpression
      argument
       number
        51
  \n\n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  assemblerdirective
   cseg
    cseg
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       number
        0
  \n\n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        LBIOS
  \n
 line
  \n
 line
  lbl
   label
    name
     start
   :
  \n\n
 line
  instruction
   opcode
    xor
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_offset
    ,
    expression
     multiplyingExpression
      argument
       name
        lbdosoff
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_segment
    ,
    expression
     multiplyingExpression
      argument
       register_
        cs
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        cs
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ss
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ds
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        es
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        sp
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          (
          expression
           multiplyingExpression
            argument
             name
              stack
          )
  \n\n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        initlbdos
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        openfnc
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       number
        255
  !
  instruction
   opcode
    jne
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        perr
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           nofile
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        msg
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        stop
  \n
 line
  lbl
   label
    name
     perr
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       register_
        cs
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setdmab
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           page1
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setdma
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        read
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       ptr
        word
        ptr
       expression
        multiplyingExpression
         argument
          name
           page1
        sign
         +
        multiplyingExpression
         argument
          number
           3
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        ldseg
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setdmab
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           segment
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        msg
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       name
        ldseg
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        phex
  \n\n
 line
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  lbl
   label
    name
     readit
   :
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        setdma
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        read
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       number
        01H
  !
  instruction
   opcode
    je
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        done
  \n
 line
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       number
        0
  !
  instruction
   opcode
    je
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        prerr
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           rerr
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        msg
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        stop
  \n\n
 line
  lbl
   label
    name
     prerr
   :
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
  !
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       number
        80h
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        readit
  \n
 line
  lbl
   label
    name
     done
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           lenmsg
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        msg
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    dec
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        phex
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        pcrlf
  \n
 line
  instruction
   opcode
    jmpf
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bios
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  \n
 line
  lbl
   label
    name
     phex
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
    ,
    expression
     multiplyingExpression
      argument
       number
        0404h
  \n
 line
  lbl
   label
    name
     lhex
   :
  \n
 line
  instruction
   opcode
    rol
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
    ,
    expression
     multiplyingExpression
      argument
       register_
        cl
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  !
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        pnib
  \n
 line
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ax
  !
  instruction
   opcode
    pop
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cx
  \n
 line
  instruction
   opcode
    dec
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        ch
  !
  instruction
   opcode
    jnz
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        lhex
  \n
 line
  instruction
   opcode
    ret
  \n
 line
  lbl
   label
    name
     pnib
   :
  \n
 line
  instruction
   opcode
    and
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       number
        0fh
  !
  instruction
   opcode
    cmp
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       number
        9
  \n
 line
  instruction
   opcode
    ja
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        p10
  \n
 line
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       string_
        '0'
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        prn
  \n
 line
  lbl
   label
    name
     p10
   :
  instruction
   opcode
    add
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        al
    ,
    expression
     multiplyingExpression
      argument
       string_
        'A'
     sign
      -
     multiplyingExpression
      argument
       number
        10
  \n
 line
  lbl
   label
    name
     prn
   :
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dl
    ,
    expression
     multiplyingExpression
      argument
       register_
        al
  \n\n
 line
  \n
 line
  lbl
   label
    name
     putchar
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        coutf
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n\n
 line
  \n
 line
  lbl
   label
    name
     initlbdos
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        seldsk
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       name
        bootdrv
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n\n
 line
  \n
 line
  lbl
   label
    name
     openfnc
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        openf
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           fcb
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        openf
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     setdma
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        dmaf
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     setdmab
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        dmabf
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     pcrlf
   :
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           crlf
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     msg
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        pstrf
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        sys_vec
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     read
   :
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        dx
    ,
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           fcb
  !
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       register_
        cl
    ,
    expression
     multiplyingExpression
      argument
       name
        readsf
  \n
 line
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     sys_vec
   :
  \n
 line
  instruction
   opcode
    int
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        bdos_int
  \n
 line
  instruction
   opcode
    ret
  \n\n
 line
  \n
 line
  \n
 line
  lbl
   label
    name
     stop
   :
  instruction
   opcode
    hlt
  \n
 line
  instruction
   opcode
    jmp
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        stop
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  lbl
   label
    name
     nofile
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        string_
         'The File CPM.SYS Not Found On This Disk$'
  \n
 line
  lbl
   label
    name
     rerr
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        string_
         'Error In Reading CPM.SYS$'
  \n
 line
  lbl
   label
    name
     segment
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        string_
         'Segment Address = $'
  \n
 line
  lbl
   label
    name
     lenmsg
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        string_
         '    Last Offset = $'
  \n
 line
  lbl
   label
    name
     crlf
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         cr
     ,
     expression
      multiplyingExpression
       argument
        name
         lf
     ,
     expression
      multiplyingExpression
       argument
        string_
         '$'
  \n\n\n
 line
  \n\n
 line
  lbl
   label
    name
     bios
  assemblerdirective
   dd
    dd
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         abs_zero
  \n\n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           bios
  \n\n
 line
  lbl
   label
    name
     biosstart
  assemblerdirective
   dw
    dw
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         biosoff
  \n
 line
  lbl
   label
    name
     ldseg
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        1
  \n\n\n
 line
  lbl
   label
    name
     fcb
  assemblerdirective
   db
    db
    expressionlist
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        string_
         'CPM     '
     ,
     expression
      multiplyingExpression
       argument
        string_
         'SYS'
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
     ,
     expression
      multiplyingExpression
       argument
        number
         0
  \n\n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       (
       expression
        multiplyingExpression
         argument
          offset
          expression
           multiplyingExpression
            argument
             dollar
              $
           sign
            +
           multiplyingExpression
            argument
             number
              1
       )
      and
      argument
       number
        0FFFEh
  \n
 line
  assemblerdirective
   rw
    rw
    expression
     multiplyingExpression
      argument
       number
        32
  \n
 line
  assemblerdirective
   equ
    name
     stack
    equ
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          dollar
           $
  \n\n
 line
  assemblerdirective
   dseg
    dseg
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       name
        stack
  \n
 line
  lbl
   label
    name
     page1
  assemblerdirective
   rb
    rb
    expression
     multiplyingExpression
      argument
       number
        128
  \n\n\n
 line
  \n
 line
  assemblerdirective
   org
    org
    expression
     multiplyingExpression
      argument
       name
        lbios_offset
  \n
 line
  lbl
   label
    name
     lbios
   :
  \n\n
 line
  assemblerdirective
   end
    end
  \n
 <EOF>
