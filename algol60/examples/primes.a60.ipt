program
 block
  unlabelled_block
   block_head
    begin
    declaration
     type_declaration
      local_or_own
       empty_
      type_
       integer
      type_list
       simple_variable
        variable_identifier
         NN
   ;
   compound_tail
    statement
     unconditional_statement
      basic_statement
       unlabelled_basic_statement
        assignment_statement
         left_part_list
          left_part
           variable
            simple_variable
             variable_identifier
              NN
           :=
         arithmetic_expression
          simple_arithmetic_expression
           term
            factor
             primary
              variable
               simple_variable
                variable_identifier
                 200
    ;
    compound_tail
     statement
      unconditional_statement
       block
        unlabelled_block
         block_head
          begin
          declaration
           procedure_declaration
            type_
             Boolean
            procedure
            procedure_heading
             procedure_identifier
              isprime
             formal_parameter_part
              (
              formal_parameter_list
               formal_parameter
                n
              )
             ;
             value_part
              value
              identifier_list
               n
              ;
             specification_part
              specification_part
               empty_
              specifier
               type_
                integer
              identifier_list
               n
            procedure_body
             code
              ;
              begin
              Boolean
              procedure
              even
              (
              n
              )
              ;
              value
              n
              ;
              integer
              n
              ;
              even
              :=
              entier
              (
              n
              /
              2
              )
              *
              2
              =
              n
              ;
              integer
              i
              ;
              isprime
              :=
              false
              ;
              if
              even
              (
              n
              )
              &
              n
              !=
              2
              then
              goto
              ret
              ;
              for
              i
              :=
              3
              step
              2
              until
              n
              div
              2
              do
              if
              entier
              (
              n
              /
              i
              )
              *
              i
              =
              n
              then
              goto
              ret
              ;
              isprime
              :=
              true
              ;
              ret
              :
              end
              ;
              integer
              i
              ;
              printsln
              (
              `first:'
              )
              ;
              for
              i
              :=
              2
              step
              1
              until
              NN
              do
              if
              isprime
              (
              i
              )
              then
              printnln
              (
              i
              )
              ;
              printsln
              (
              `done.'
              )
              end
              ;
              begin
              Boolean
              array
              arr
              [
              2
              :
              NN
              ]
              ;
              integer
              i
              ,
              j
              ;
              printsln
              (
              `second:'
              )
              ;
              for
              i
              :=
              2
              step
              1
              until
              NN
              do
              arr
              [
              i
              ]
              :=
              true
              ;
              for
              i
              :=
              2
              step
              1
              until
              NN
              div
              2
              do
              for
              j
              :=
              2
              *
              i
              step
              i
              until
              NN
              do
              arr
              [
              j
              ]
              :=
              false
              ;
              for
              i
              :=
              2
              step
              1
              until
              NN
              do
              if
              arr
              [
              i
              ]
              then
              printnln
              (
              i
              )
         ;
         compound_tail
          statement
           unconditional_statement
            basic_statement
             unlabelled_basic_statement
              procedure_statement
               procedure_identifier
                printsln
               actual_parameter_part
                (
                actual_parameter_list
                 actual_parameter
                  `done.'
                )
          end
     end
 <EOF>
