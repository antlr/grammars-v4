program
 block
  unlabelled_block
   block_head
    begin
    declaration
     type_declaration
      local_or_own
       empty_
      type_
       integer
      type_list
       simple_variable
        variable_identifier
         N
       ,
       type_list
        simple_variable
         variable_identifier
          MAXN
   ;
   compound_tail
    statement
     unconditional_statement
      basic_statement
       unlabelled_basic_statement
        assignment_statement
         left_part_list
          left_part
           variable
            simple_variable
             variable_identifier
              MAXN
           :=
         arithmetic_expression
          simple_arithmetic_expression
           term
            factor
             primary
              variable
               simple_variable
                variable_identifier
                 9
    ;
    compound_tail
     statement
      unconditional_statement
       basic_statement
        unlabelled_basic_statement
         assignment_statement
          left_part_list
           left_part
            variable
             simple_variable
              variable_identifier
               N
            :=
          arithmetic_expression
           simple_arithmetic_expression
            term
             factor
              primary
               variable
                simple_variable
                 variable_identifier
                  2
     ;
     compound_tail
      statement
       unconditional_statement
        block
         label
          tryNextN
         :
         block
          unlabelled_block
           block_head
            block_head
             block_head
              block_head
               block_head
                block_head
                 begin
                 declaration
                  array_declaration
                   local_or_own
                    empty_
                   array_declarer
                    type_
                     integer
                    array
                   array_list
                    array_segment
                     array_identifier
                      column
                     [
                     bound_pair_list
                      bound_pair
                       lower_bound
                        arithmetic_expression
                         simple_arithmetic_expression
                          term
                           factor
                            primary
                             variable
                              simple_variable
                               variable_identifier
                                1
                       :
                       upper_bound
                        arithmetic_expression
                         simple_arithmetic_expression
                          term
                           factor
                            primary
                             variable
                              simple_variable
                               variable_identifier
                                N
                     ]
                ;
                declaration
                 array_declaration
                  local_or_own
                   empty_
                  array_declarer
                   type_
                    Boolean
                   array
                  array_list
                   array_segment
                    array_identifier
                     empcol
                    [
                    bound_pair_list
                     bound_pair
                      lower_bound
                       arithmetic_expression
                        simple_arithmetic_expression
                         term
                          factor
                           primary
                            variable
                             simple_variable
                              variable_identifier
                               1
                      :
                      upper_bound
                       arithmetic_expression
                        simple_arithmetic_expression
                         term
                          factor
                           primary
                            variable
                             simple_variable
                              variable_identifier
                               N
                    ]
               ;
               declaration
                array_declaration
                 local_or_own
                  empty_
                 array_declarer
                  type_
                   Boolean
                  array
                 array_list
                  array_segment
                   array_identifier
                    empup
                   [
                   bound_pair_list
                    bound_pair
                     lower_bound
                      arithmetic_expression
                       simple_arithmetic_expression
                        simple_arithmetic_expression
                         adding_operator
                          -
                         term
                          factor
                           primary
                            variable
                             simple_variable
                              variable_identifier
                               N
                        adding_operator
                         +
                        term
                         factor
                          primary
                           variable
                            simple_variable
                             variable_identifier
                              1
                     :
                     upper_bound
                      arithmetic_expression
                       simple_arithmetic_expression
                        simple_arithmetic_expression
                         term
                          factor
                           primary
                            variable
                             simple_variable
                              variable_identifier
                               N
                        adding_operator
                         -
                        term
                         factor
                          primary
                           variable
                            simple_variable
                             variable_identifier
                              1
                   ]
              ;
              declaration
               array_declaration
                local_or_own
                 empty_
                array_declarer
                 type_
                  Boolean
                 array
                array_list
                 array_segment
                  array_identifier
                   empdo
                  [
                  bound_pair_list
                   bound_pair
                    lower_bound
                     arithmetic_expression
                      simple_arithmetic_expression
                       term
                        factor
                         primary
                          variable
                           simple_variable
                            variable_identifier
                             2
                    :
                    upper_bound
                     arithmetic_expression
                      simple_arithmetic_expression
                       term
                        term
                         factor
                          primary
                           variable
                            simple_variable
                             variable_identifier
                              2
                        multiplying_operator
                         *
                        factor
                         primary
                          variable
                           simple_variable
                            variable_identifier
                             N
                  ]
             ;
             declaration
              type_declaration
               local_or_own
                empty_
               type_
                integer
               type_list
                simple_variable
                 variable_identifier
                  i
            ;
            declaration
             procedure_declaration
              procedure
              procedure_heading
               procedure_identifier
                print
               formal_parameter_part
                empty_
               ;
               value_part
                empty_
               specification_part
                empty_
              procedure_body
               statement
                unconditional_statement
                 block
                  unlabelled_block
                   block_head
                    block_head
                     begin
                     declaration
                      type_declaration
                       local_or_own
                        empty_
                       type_
                        integer
                       type_list
                        simple_variable
                         variable_identifier
                          i
                        ,
                        type_list
                         simple_variable
                          variable_identifier
                           j
                    ;
                    declaration
                     procedure_declaration
                      procedure
                      procedure_heading
                       procedure_identifier
                        outframe
                       formal_parameter_part
                        empty_
                       ;
                       value_part
                        empty_
                       specification_part
                        empty_
                      procedure_body
                       code
                        begin
                        integer
                        i
                        ;
                        for
                        i
                        :=
                        1
                        step
                        1
                        until
                        N
                        do
                        prints
                        (
                        `+---'
                        )
                        ;
                        printsln
                        (
                        `+'
                        )
                        end
                        ;
                        for
                        j
                        :=
                        1
                        step
                        1
                        until
                        N
                        do
                        begin
                        outframe
                        ;
                        prints
                        (
                        `|'
                        )
                        ;
                        for
                        i
                        :=
                        1
                        step
                        1
                        until
                        N
                        do
                        begin
                        if
                        N
                        +
                        1
                        -
                        j
                        =
                        column
                        [
                        i
                        ]
                        then
                        prints
                        (
                        ` Q |'
                        )
                        else
                        prints
                        (
                        `   |'
                        )
                        end
                        ;
                        printsln
                        (
                        `'
                        )
                        end
                        ;
                        outframe
                        ;
                        end
                        ;
                        procedure
                        set
                        (
                        x
                        )
                        ;
                        value
                        x
                        ;
                        integer
                        x
                        ;
                        begin
                        integer
                        y
                        ;
                        for
                        y
                        :=
                        1
                        step
                        1
                        until
                        N
                        do
                        begin
                        if
                        empcol
                        [
                        y
                        ]
                        &
                        empup
                        [
                        x
                        -
                        y
                        ]
                        &
                        empdo
                        [
                        x
                        +
                        y
                        ]
                        then
                        begin
                        column
                        [
                        y
                        ]
                        :=
                        x
                        ;
                        empcol
                        [
                        y
                        ]
                        :=
                        false
                        ;
                        empup
                        [
                        x
                        -
                        y
                        ]
                        :=
                        false
                        ;
                        empdo
                        [
                        x
                        +
                        y
                        ]
                        :=
                        false
                        ;
                        if
                        x
                        =
                        N
                        then
                        goto
                        gotone
                        else
                        set
                        (
                        x
                        +
                        1
                        )
                        ;
                        empdo
                        [
                        x
                        +
                        y
                        ]
                        :=
                        true
                        ;
                        empup
                        [
                        x
                        -
                        y
                        ]
                        :=
                        true
                        ;
                        empcol
                        [
                        y
                        ]
                        :=
                        true
                        ;
                        column
                        [
                        y
                        ]
                        :=
                        0
                        end
                        end
                        end
                        ;
                        prints
                        (
                        `looking onto a '
                        )
                        ;
                        printn
                        (
                        N
                        )
                        ;
                        prints
                        (
                        ` x '
                        )
                        ;
                        printn
                        (
                        N
                        )
                        ;
                        printsln
                        (
                        ` chessboard...'
                        )
                        ;
                        for
                        i
                        :=
                        1
                        step
                        1
                        until
                        N
                        do
                        begin
                        column
                        [
                        i
                        ]
                        :=
                        0
                        ;
                        empcol
                        [
                        i
                        ]
                        :=
                        true
                        end
                        ;
                        for
                        i
                        :=
                        -
                        N
                        +
                        1
                        step
                        1
                        until
                        N
                        -
                        1
                        do
                        empup
                        [
                        i
                        ]
                        :=
                        true
                        ;
                        for
                        i
                        :=
                        2
                        step
                        1
                        until
                        2
                        *
                        N
                        do
                        empdo
                        [
                        i
                        ]
                        :=
                        true
                        ;
                        set
                        (
                        1
                        )
                        ;
                        printsln
                        (
                        `NO SOLUTION.'
                        )
                        ;
                        goto
                        contN
                        ;
                        gotone
                        :
                        printsln
                        (
                        `SOLVED'
                        )
                        ;
                        print
                        ;
                        contN
                        :
                        if
                        N
                        <
                        MAXN
                        then
                        begin
                        N
                        :=
                        N
                        +
                        1
                   ;
                   compound_tail
                    statement
                     unconditional_statement
                      basic_statement
                       unlabelled_basic_statement
                        go_to_statement
                         goto
                         designational_expression
                          simple_designational_expression
                           label
                            tryNextN
                    end
           ;
           compound_tail
            statement
             unconditional_statement
              basic_statement
               unlabelled_basic_statement
                procedure_statement
                 procedure_identifier
                  printsln
                 actual_parameter_part
                  (
                  actual_parameter_list
                   actual_parameter
                    `done.'
                  )
            end
      end
 <EOF>
